{"version":3,"file":"static/js/433.ed872bad.chunk.js","mappings":"6HACA,SAAgB,iBAAmB,kDAAkD,aAAe,8CAA8C,IAAM,qCAAqC,UAAY,2CAA2C,KAAO,uC,wICmB3P,MAyGA,EAzGgCA,KAC9B,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC3B,SAAEC,IAAaC,EAAAA,EAAAA,MACf,QAAEC,EAAO,WAAEC,IAAeC,EAAAA,EAAAA,MACzBC,EAASC,IAAcP,EAAAA,EAAAA,WAAS,GAkBvC,OAhBAQ,EAAAA,EAAAA,YAAU,KACQ,WACd,IACE,MAAM,KAAEV,SAAeW,EAAAA,EAAAA,MACjBC,EAAWZ,EAAKa,QAAQC,QAC3BC,GAASA,EAAKC,YAAYC,GAAGC,aAAef,IAE/CF,EAAQW,EACV,CAAE,MAAOO,IACPC,EAAAA,EAAAA,GAAWD,EAAME,QACnB,CAAC,QACCZ,GAAW,EACb,CACD,EAZe,EAYZ,GACH,CAACN,KAGFmB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAACE,EAAAA,GAAM,CACLC,OAAQ,YACRC,YAAY,EACZC,gBAAgB,EAChBC,MAAM,EACNC,cAAe,OACfC,gBAAiB,CACfC,OAAQ,EACRC,QAAS,EACTC,MAAO,IACPC,SAAU,KAEZC,WAAY,CAAEC,GAAI,qBAAsBC,WAAW,GACnDC,WAAY,CACVC,OAAQ,sBACRC,OAAQ,sBACRH,WAAW,GAEbI,QAAS,CAACC,EAAAA,GAAiBC,EAAAA,GAAYC,EAAAA,IACvCC,UAAWC,EAAIC,iBAAiBxB,SAAA,CAE/B,IAAIyB,MAAM,IAAIC,KAAI,CAACC,EAAOC,KACzBC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CAEVC,MAAO,CACLC,MAAO,OAETV,UAAWC,EAAIU,aAAajC,UAE5B6B,EAAAA,EAAAA,KAAA,OAAKK,IAAKP,EAAOQ,IAAI,GAAGb,UAAWC,EAAIa,OANlCR,MAST7B,EAAAA,EAAAA,MAAA,OAAKuB,UAAU,mBAAkBtB,SAAA,EAC/B6B,EAAAA,EAAAA,KAAA,OACEP,UAAU,kCACVS,MAAO,CAAEM,MAAO,kBAElBR,EAAAA,EAAAA,KAAA,OACEP,UAAU,kCACVS,MAAO,CAAEM,MAAO,kBAGlBR,EAAAA,EAAAA,KAAA,OACEP,UAAU,oBACVS,MAAO,CACLO,SAAU,WACVC,OAAQ,eAMftD,IACC4C,EAAAA,EAAAA,KAAA,OAAKP,UAAU,SAAQtB,UACrB6B,EAAAA,EAAAA,KAACW,EAAAA,EAAY,OAGjBX,EAAAA,EAAAA,KAAA,MAAIP,UAAWC,EAAIkB,KAAKzC,SACrBvB,IACK,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMiD,KAAKlC,IACTqC,EAAAA,EAAAA,KAAAa,EAAAA,SAAA,CAAA1C,UACE6B,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAEJnD,KAAMA,EACNoD,eAAgBA,IAAM7D,EAAWS,GACjCqD,UAAW/D,EAAQU,EAAKE,KAHnBF,EAAKE,WAQF,KAAb,OAAJjB,QAAI,IAAJA,OAAI,EAAJA,EAAMqE,UACLjB,EAAAA,EAAAA,KAAA,OAAKP,UAAWC,EAAIwB,UAAU/C,UAC5B6B,EAAAA,EAAAA,KAAA,KAAGP,UAAW,GAAGC,EAAIyB,4BAA4BhD,SAAC,yCAKlD,C","sources":["webpack://nola/./src/pages/SearchEngineResultsPage/SearchEngineResultsPage.module.css?b419","pages/SearchEngineResultsPage/SearchEngineResultsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"swiper_container\":\"SearchEngineResultsPage_swiper_container__q-1WT\",\"swiper_slide\":\"SearchEngineResultsPage_swiper_slide__KWUDZ\",\"img\":\"SearchEngineResultsPage_img__nKNw0\",\"container\":\"SearchEngineResultsPage_container__fCs5N\",\"list\":\"SearchEngineResultsPage_list__pWIQY\"};","import css from \"./SearchEngineResultsPage.module.css\";\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-coverflow\";\r\nimport \"swiper/css/pagination\";\r\nimport \"swiper/css/navigation\";\r\nimport { EffectCoverflow, Navigation, Pagination } from \"swiper/modules\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  getAllPostApi,\r\n  getPostsByCategoryId,\r\n  getSubCategoriesId,\r\n} from \"../../services/https/https\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSavePost } from \"../../services/hooks/useSavePost\";\r\nimport { Posts } from \"../../components/Posts/Posts\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { LoaderSpiner } from \"../../services/loaderSpinner/LoaderSpinner\";\r\n\r\nconst SearchEngineResultsPage = () => {\r\n  const [data, setData] = useState([]);\r\n  const { searchId } = useParams();\r\n  const { isSaved, toggleSave } = useSavePost();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getData = (async () => {\r\n      try {\r\n        const { data } = await getAllPostApi();\r\n        const filtered = data.results.filter(\r\n          (post) => post.subcategory.id.toString() === searchId\r\n        );\r\n        setData(filtered);\r\n      } catch (error) {\r\n        ToastError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [searchId]);\r\n\r\n  return (\r\n    <div>\r\n      <Swiper\r\n        effect={\"coverflow\"}\r\n        grabCursor={true}\r\n        centeredSlides={true}\r\n        loop={true}\r\n        slidesPerView={\"auto\"}\r\n        coverflowEffect={{\r\n          rotate: 0,\r\n          stretch: 0,\r\n          depth: 100,\r\n          modifier: 2.5,\r\n        }}\r\n        pagination={{ el: \".swiper-pagination\", clickable: true }}\r\n        navigation={{\r\n          nextEl: \".swiper-button-next\",\r\n          prevEl: \".swiper-button-prev\",\r\n          clickable: true,\r\n        }}\r\n        modules={[EffectCoverflow, Pagination, Navigation]}\r\n        className={css.swiper_container}\r\n      >\r\n        {[...Array(6)].map((slide, idx) => (\r\n          <SwiperSlide\r\n            key={idx}\r\n            style={{\r\n              width: \"80%\",\r\n            }}\r\n            className={css.swiper_slide}\r\n          >\r\n            <img src={slide} alt=\"\" className={css.img} />\r\n          </SwiperSlide>\r\n        ))}\r\n        <div className=\"slider-controler\">\r\n          <div\r\n            className=\"swiper-button-prev slider-arrow\"\r\n            style={{ color: \"transparent\" }}\r\n          ></div>\r\n          <div\r\n            className=\"swiper-button-next slider-arrow\"\r\n            style={{ color: \"transparent\" }}\r\n          ></div>\r\n\r\n          <div\r\n            className=\"swiper-pagination\"\r\n            style={{\r\n              position: \"relative\",\r\n              bottom: \"2px\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </Swiper>\r\n\r\n      {loading && (\r\n        <div className=\"loader\">\r\n          <LoaderSpiner />\r\n        </div>\r\n      )}\r\n      <ul className={css.list}>\r\n        {data &&\r\n          data?.map((post) => (\r\n            <>\r\n              <Posts\r\n                key={post.id}\r\n                post={post}\r\n                handleSavePost={() => toggleSave(post)}\r\n                savedPost={isSaved(post.id)}\r\n              />\r\n            </>\r\n          ))}\r\n      </ul>\r\n      {data?.length === 0 && (\r\n        <div className={css.container}>\r\n          <p className={`${css.noResults} dark:text-white`}>\r\n            No results found for your query.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchEngineResultsPage;\r\n"],"names":["SearchEngineResultsPage","data","setData","useState","searchId","useParams","isSaved","toggleSave","useSavePost","loading","setLoading","useEffect","getAllPostApi","filtered","results","filter","post","subcategory","id","toString","error","ToastError","message","_jsxs","children","Swiper","effect","grabCursor","centeredSlides","loop","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","pagination","el","clickable","navigation","nextEl","prevEl","modules","EffectCoverflow","Pagination","Navigation","className","css","swiper_container","Array","map","slide","idx","_jsx","SwiperSlide","style","width","swiper_slide","src","alt","img","color","position","bottom","LoaderSpiner","list","_Fragment","Posts","handleSavePost","savedPost","length","container","noResults"],"sourceRoot":""}