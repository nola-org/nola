{"version":3,"file":"static/js/7755.9981aebc.chunk.js","mappings":"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","sources":["assets/icons/circle-exclamation-mark.svg","webpack://nola/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://nola/./src/components/GoogleButton/GoogleAndFacebookButton.module.css?e16a","components/GoogleButton/GoogleAndFacebookButton.jsx","webpack://nola/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/SignInPage/SignInPage.jsx","services/ToastError/ToastError.js","services/Toastify/Toastify.js"],"sourcesContent":["var _path, _circle, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCircleExclamationMark(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 10.0067V10\",\n    stroke: \"#DA2E2E\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 8.00008,\n    cy: 8.00008,\n    r: 4.83333,\n    stroke: \"#DA2E2E\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 6V8.33333\",\n    stroke: \"#DA2E2E\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCircleExclamationMark);\nexport default __webpack_public_path__ + \"static/media/circle-exclamation-mark.17ba79873a47e9a43cf4f3584ca4f5b5.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"buttonForm\":\"Button_buttonForm__dlu6b\",\"disabled\":\"Button_disabled__7ePqW\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Button.module.css\";\r\n\r\nconst Button = ({ label, onClick, disabled }) => {\r\n  return (\r\n    <button className={`${css.buttonForm} ${disabled ? css.disabled : \"\"}`} onClick={onClick} disabled={disabled}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"GoogleAndFacebookButton_buttonContainer__3YpLe\",\"buttonForm\":\"GoogleAndFacebookButton_buttonForm__KUp+P\",\"separatorLine\":\"GoogleAndFacebookButton_separatorLine__t75wC\",\"orText\":\"GoogleAndFacebookButton_orText__NK3BJ\",\"icon\":\"GoogleAndFacebookButton_icon__e2Xga\"};","import React, { useState } from \"react\";\r\nimport { FaFacebook } from \"react-icons/fa\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport FacebookLogin from \"@greatsumini/react-facebook-login\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport css from \"./GoogleAndFacebookButton.module.css\";\r\nimport { useGoogleLogin } from \"@react-oauth/google\";\r\n\r\nconst GoogleAndFacebookButton = () => {\r\n  const navigate = useNavigate();\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const googleLogin = useGoogleLogin({\r\n    onSuccess: (tokenResponse) => {\r\n      console.log(\"Google login successful\", tokenResponse);\r\n      setRedirect(true);\r\n      navigate(\"/main/accountAdverticer\");\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Google login failed\", error);\r\n    },\r\n  });\r\n\r\n  const handleFacebookSuccess = (response) => {\r\n    console.log(\"Facebook login successful\", response);\r\n    setRedirect(true);\r\n    navigate(\"/main/accountAdverticer\");\r\n  };\r\n\r\n  const handleFacebookFailure = (error) => {\r\n    console.error(\"Facebook login failed\", error);\r\n  };\r\n\r\n  return (\r\n    <div className={css.buttonContainer}>\r\n      <div className={css.separatorLine}></div>\r\n      <div className={`${css.orText} dark:bg-black`}>or</div>\r\n\r\n      <button\r\n        onClick={() => googleLogin()}\r\n        className={`${css.buttonForm} dark:bg-black dark:border-white dark:text-white`}\r\n      >\r\n        <FcGoogle className={css.icon} />\r\n        Continue with Google\r\n      </button>\r\n\r\n      <FacebookLogin\r\n        appId=\"366622046395430\"\r\n        autoLoad={false}\r\n        fields=\"name,email,picture\"\r\n        callback={handleFacebookSuccess}\r\n        onFailure={handleFacebookFailure}\r\n        render={({ onClick }) => (\r\n          <button\r\n            onClick={onClick}\r\n            className={`${css.buttonForm} dark:bg-black dark:border-white dark:text-white`}\r\n          >\r\n            <FaFacebook className={css.icon} />\r\n            Continue with Facebook\r\n          </button>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleAndFacebookButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputForm\":\"LoginForm_inputForm__PH4Kl\",\"active\":\"LoginForm_active__CMUQg\",\"link_forgot\":\"LoginForm_link_forgot__VFByZ\",\"textForgot\":\"LoginForm_textForgot__lO+qg\",\"errorPlaceholder\":\"LoginForm_errorPlaceholder__ZJm9l\",\"inputContainer\":\"LoginForm_inputContainer__-QX1A\",\"passwordInputContainer\":\"LoginForm_passwordInputContainer__oJcUB\",\"img_error\":\"LoginForm_img_error__VH8hY\",\"eyeIcon\":\"LoginForm_eyeIcon__IpyHx\",\"error\":\"LoginForm_error__8e6vr\",\"errorText\":\"LoginForm_errorText__-8+pc\",\"btn_text\":\"LoginForm_btn_text__UV97L\",\"btn_valid\":\"LoginForm_btn_valid__+Hz8i\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../Button\";\r\nimport css from \"./LoginForm.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginThunk } from \"../../redux/auth/authThunk\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport error from \"../../assets/icons/circle-exclamation-mark.svg\";\r\n\r\n\r\nconst schema = yup.object().shape({\r\nusername: yup\r\n    .string()\r\n    .min(1, \"Name is required\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(8, \"Password must be at least 8 characters\"),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [validForm, setValidForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // const validEmail = [\".com\", \".net\", \".ua\"];\r\n\r\n    if (\r\n      // validEmail.find((el) => formData?.email?.includes(el)) &&\r\n      formData?.password?.length > 7 &&\r\n      errors?.username?.length === 0 &&\r\n      errors?.password?.length === 0\r\n    ) {\r\n      setValidForm(true);\r\n      return;\r\n    } else {\r\n      setValidForm(false);\r\n    }\r\n  }, [\r\n    errors?.username?.length,\r\n    errors?.password?.length,\r\n    formData?.username,\r\n    formData?.username?.length,\r\n    formData?.password?.length,\r\n    errors,\r\n  ]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n    setErrors({\r\n      ...errors,\r\n      [name]: \"\",\r\n    });\r\n  };\r\n\r\n  const handleTogglePassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleBlur = async (field) => {\r\n    try {\r\n      await schema.validateAt(field, formData);\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: \"\",\r\n      }));\r\n    } catch (validationError) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: validationError.message,\r\n      }));\r\n      setValidForm(false);\r\n    }\r\n  };\r\n\r\n  const getBorderColor = (field) => {\r\n    return errors[field] && \"#DA2E2E\";\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    schema\r\n      .validate(formData, { abortEarly: false })\r\n      .then(async () => {\r\n        console.log(\"Form submitted with data:\", formData);\r\n        try {\r\n          await dispatch(loginThunk(formData)).unwrap();\r\n          Toastify(\"SignIn sucsessfull\");\r\n          navigate(\"/main/accountAdverticer/adverticerEdit\");\r\n        } catch (error) {\r\n          ToastError(error);\r\n        }\r\n      })\r\n\r\n      .catch((validationErrors) => {\r\n        const errorsMap = {};\r\n        validationErrors.inner.forEach((error) => {\r\n          errorsMap[error.path] = error.message;\r\n        });\r\n        setErrors(errorsMap);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={css.inputContainer}>\r\n          <div className={css.errorText}>{errors.username}</div>\r\n          <input\r\n            className={`${css.inputForm}  ${\r\n              errors?.username?.length === 0 ? css.active : \"\"\r\n            }\r\n             ${errors?.username?.length > 0 ? css.errorPlaceholder : \"\"}\r\n             dark:bg-black dark:border-white dark:text-white`}\r\n            type=\"username\"\r\n            name=\"username\"\r\n            placeholder=\"username\"\r\n            value={formData.username}\r\n            onChange={handleInputChange}\r\n            onBlur={() => handleBlur(\"username\")}\r\n            style={{\r\n              borderColor: getBorderColor(\"username\"),\r\n              color: getBorderColor(\"username\"),\r\n            }}\r\n          />\r\n          {errors?.username?.length > 1 ? (\r\n            <img src={error} alt=\"\" className={css.img_error} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className={css.inputContainer}>\r\n          <div className={css.errorText}>{errors.password}</div>\r\n          <div className={css.passwordInputContainer}>\r\n            <input\r\n              className={`${css.inputForm} ${css.passwordInput}  ${\r\n                errors?.password?.length === 0 ? css.active : \"\"\r\n              }\r\n              ${errors?.password?.length > 0 ? css.errorPlaceholder : \"\"}\r\n               dark:bg-black dark:border-white dark:text-white`}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n              onBlur={() => handleBlur(\"password\")}\r\n              style={{\r\n                borderColor: getBorderColor(\"password\"),\r\n                color: getBorderColor(\"password\"),\r\n              }}\r\n            />\r\n            <div\r\n              className={`${css.eyeIcon} ${\r\n                errors?.password?.length > 1 ? css.error : \"\"\r\n              }`}\r\n              onClick={handleTogglePassword}\r\n            >\r\n              {!showPassword ? <FaEyeSlash /> : <FaEye />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <Link to=\"/recovery\" className={css.link_forgot}>\r\n            <p className={css.textForgot}>Forgot password?</p>\r\n          </Link>\r\n        </div>\r\n        <div className={`${css.btn_text} ${validForm ? css.btn_valid : \"\"}`}>\r\n          <Button\r\n            label=\"Sign In\"\r\n            type=\"submit\"\r\n            disabled={validForm ? false : true}\r\n          />\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n\r\n// const schema = yup.object().shape({\r\n//   email: yup\r\n//     .string()\r\n//     .matches(/^[^\\s]*$/, \"Please enter valid characters\")\r\n//     .matches(/^[^а-яА-ЯіІїЇєЄ]*$/, \"Please enter valid characters\")\r\n//     .matches(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Please enter a valid email address\")\r\n//     .required(\"Email is required\"),\r\n//   password: yup\r\n//     .string()\r\n//     .required(\"Password is required\")\r\n//     .min(8, \"Password must be at least 8 characters\"),\r\n// });\r\n\r\n// const LoginForm = () => {\r\n//   const dispatch = useDispatch();\r\n//   const navigate = useNavigate();\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   });\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n//   const [errors, setErrors] = useState({});\r\n//   const [validForm, setValidForm] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     // const validEmail = [\".com\", \".net\", \".ua\"];\r\n\r\n//     if (\r\n//       // validEmail.find((el) => formData?.email?.includes(el)) &&\r\n//       formData?.password?.length > 7 &&\r\n//       errors?.email?.length === 0 &&\r\n//       errors?.password?.length === 0\r\n//     ) {\r\n//       setValidForm(true);\r\n//       return;\r\n//     } else {\r\n//       setValidForm(false);\r\n//     }\r\n//   }, [\r\n//     errors?.email?.length,\r\n//     errors?.password?.length,\r\n//     formData?.email,\r\n//     formData?.email?.length,\r\n//     formData?.password?.length,\r\n//     errors,\r\n//   ]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({\r\n//       ...formData,\r\n//       [name]: value,\r\n//     });\r\n//     setErrors({\r\n//       ...errors,\r\n//       [name]: \"\",\r\n//     });\r\n//   };\r\n\r\n//   const handleTogglePassword = () => {\r\n//     setShowPassword(!showPassword);\r\n//   };\r\n\r\n//   const handleBlur = async (field) => {\r\n//     try {\r\n//       await schema.validateAt(field, formData);\r\n//       setErrors((prevErrors) => ({\r\n//         ...prevErrors,\r\n//         [field]: \"\",\r\n//       }));\r\n//     } catch (validationError) {\r\n//       setErrors((prevErrors) => ({\r\n//         ...prevErrors,\r\n//         [field]: validationError.message,\r\n//       }));\r\n//       setValidForm(false);\r\n//     }\r\n//   };\r\n\r\n//   const getBorderColor = (field) => {\r\n//     return errors[field] && \"#DA2E2E\";\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     schema\r\n//       .validate(formData, { abortEarly: false })\r\n//       .then(async () => {\r\n//         console.log(\"Form submitted with data:\", formData);\r\n//         try {\r\n//           await dispatch(loginThunk(formData)).unwrap();\r\n//           Toastify(\"SignIn sucsessfull\");\r\n//           navigate(\"/main/accountAdverticer/adverticerEdit\");\r\n//         } catch (error) {\r\n//           ToastError(error);\r\n//         }\r\n//       })\r\n\r\n//       .catch((validationErrors) => {\r\n//         const errorsMap = {};\r\n//         validationErrors.inner.forEach((error) => {\r\n//           errorsMap[error.path] = error.message;\r\n//         });\r\n//         setErrors(errorsMap);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <ToastContainer />\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className={css.inputContainer}>\r\n//           <div className={css.errorText}>{errors.email}</div>\r\n//           <input\r\n//             className={`${css.inputForm}  ${\r\n//               errors?.email?.length === 0 ? css.active : \"\"\r\n//             }\r\n//              ${errors?.email?.length > 0 ? css.errorPlaceholder : \"\"}\r\n//              dark:bg-black dark:border-white dark:text-white`}\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             placeholder=\"Email\"\r\n//             value={formData.email}\r\n//             onChange={handleInputChange}\r\n//             onBlur={() => handleBlur(\"email\")}\r\n//             style={{\r\n//               borderColor: getBorderColor(\"email\"),\r\n//               color: getBorderColor(\"email\"),\r\n//             }}\r\n//           />\r\n//           {errors?.email?.length > 1 ? (\r\n//             <img src={error} alt=\"\" className={css.img_error} />\r\n//           ) : (\r\n//             \"\"\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className={css.inputContainer}>\r\n//           <div className={css.errorText}>{errors.password}</div>\r\n//           <div className={css.passwordInputContainer}>\r\n//             <input\r\n//               className={`${css.inputForm} ${css.passwordInput}  ${\r\n//                 errors?.password?.length === 0 ? css.active : \"\"\r\n//               }\r\n//               ${errors?.password?.length > 0 ? css.errorPlaceholder : \"\"}\r\n//                dark:bg-black dark:border-white dark:text-white`}\r\n//               type={showPassword ? \"text\" : \"password\"}\r\n//               name=\"password\"\r\n//               placeholder=\"Password\"\r\n//               value={formData.password}\r\n//               onChange={handleInputChange}\r\n//               onBlur={() => handleBlur(\"password\")}\r\n//               style={{\r\n//                 borderColor: getBorderColor(\"password\"),\r\n//                 color: getBorderColor(\"password\"),\r\n//               }}\r\n//             />\r\n//             <div\r\n//               className={`${css.eyeIcon} ${\r\n//                 errors?.password?.length > 1 ? css.error : \"\"\r\n//               }`}\r\n//               onClick={handleTogglePassword}\r\n//             >\r\n//               {!showPassword ? <FaEyeSlash /> : <FaEye />}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <Link to=\"/recovery\" className={css.link_forgot}>\r\n//             <p className={css.textForgot}>Forgot password?</p>\r\n//           </Link>\r\n//         </div>\r\n//         <div className={`${css.btn_text} ${validForm ? css.btn_valid : \"\"}`}>\r\n//           <Button\r\n//             label=\"Sign In\"\r\n//             type=\"submit\"\r\n//             disabled={validForm ? false : true}\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n","import GoogleAndFacebookButton from \"../../components/GoogleButton/GoogleAndFacebookButton\";\r\nimport LoginForm from \"../../components/LoginForm\";\r\n\r\nconst SignInPage = () => {\r\n  return (\r\n    <div className=\"\">\r\n      <LoginForm />\r\n      <GoogleAndFacebookButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInPage;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const ToastError = (message) => {\r\n  toast.error(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 2500,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 2500,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["_ref","label","onClick","disabled","_jsx","className","css","children","GoogleAndFacebookButton","navigate","useNavigate","redirect","setRedirect","useState","googleLogin","useGoogleLogin","onSuccess","tokenResponse","console","log","onError","error","_jsxs","FcGoogle","FacebookLogin","appId","autoLoad","fields","callback","response","onFailure","render","FaFacebook","schema","yup","shape","username","min","password","required","LoginForm","_errors$username2","_errors$password2","_formData$username","_formData$password2","_errors$username3","_errors$username4","_errors$username5","_errors$password3","_errors$password4","_errors$password5","dispatch","useDispatch","formData","setFormData","showPassword","setShowPassword","errors","setErrors","validForm","setValidForm","useEffect","_formData$password","_errors$username","_errors$password","length","handleInputChange","e","name","value","target","handleBlur","async","validateAt","field","prevErrors","validationError","message","getBorderColor","_Fragment","ToastContainer","onSubmit","preventDefault","validate","abortEarly","then","loginThunk","unwrap","Toastify","ToastError","catch","validationErrors","errorsMap","inner","forEach","path","inputContainer","errorText","inputForm","active","errorPlaceholder","type","placeholder","onChange","onBlur","style","borderColor","color","src","alt","img_error","passwordInputContainer","passwordInput","eyeIcon","handleTogglePassword","FaEye","FaEyeSlash","Link","to","link_forgot","textForgot","btn_text","btn_valid","Button","SignInPage","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}