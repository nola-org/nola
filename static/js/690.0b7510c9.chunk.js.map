{"version":3,"file":"static/js/690.0b7510c9.chunk.js","mappings":"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","sources":["assets/icons/arrow_left.svg","assets/icons/links.svg","assets/icons/save.svg","webpack://nola/./src/components/Banners/Banners.module.css?97db","components/Banners/Banners.jsx","webpack://nola/./src/components/PostsAdverticer/PostsAdverticer.module.css?8299","components/PostsAdverticer/PostsAdverticer.jsx","webpack://nola/./src/pages/PostDetailsPage/PostDetailsPage.module.css?c3f5","pages/PostDetailsPage/PostDetailsPage.jsx","services/Toastify/Toastify.js","services/hooks/useSavePost.js"],"sourcesContent":["var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.3333 28H39.6666\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.6666 18.6667L16.3333 28.0001L25.6666 37.3334\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow_left.79cbc6f596f7d227f8c314b9a6ec80fb.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgLinks(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.6736 23.3404C15.6109 24.4031 14.1696 25.0001 12.6667 25.0001C11.1638 25.0001 9.72243 24.4031 8.65973 23.3404C7.59702 22.2776 7 20.8363 7 19.3334C7 17.8305 7.59702 16.3892 8.65973 15.3265\",\n    stroke: \"#07145B\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.3264 10.6596C14.3891 9.59694 15.8304 8.99992 17.3333 8.99992C18.8362 8.99992 20.2776 9.59694 21.3403 10.6596C22.403 11.7224 23 13.1637 23 14.6666C23 16.1695 22.403 17.6108 21.3403 18.6735\",\n    stroke: \"#07145B\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.3337 14.6667L12.667 19.3334\",\n    stroke: \"#07145B\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLinks);\nexport default __webpack_public_path__ + \"static/media/links.8ea15b30859ab270dbacee3638b6576d.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSave(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.55068 2.01L5.55109 2.00979C6.01674 1.77202 6.54903 1.65701 7.25204 1.59865C7.94719 1.54237 8.82034 1.54199 9.97036 1.54199H9.9987H10.027C11.1774 1.54199 12.0504 1.54238 12.7452 1.59948L12.7454 1.59949C13.4483 1.657 13.9806 1.77199 14.4463 2.0098L14.4467 2.01C15.2543 2.42147 15.9109 3.07805 16.3224 3.88565L16.3226 3.88605C16.5605 4.35195 16.6762 4.88441 16.7337 5.58654C16.79 6.28176 16.7904 7.15504 16.7904 8.30533V18.3336C16.7904 18.3549 16.7849 18.3759 16.7746 18.3945C16.7642 18.4131 16.7492 18.4287 16.7311 18.44C16.713 18.4512 16.6923 18.4575 16.671 18.4585C16.6498 18.4595 16.6288 18.455 16.6098 18.4456C16.6097 18.4456 16.6096 18.4455 16.6095 18.4455L14.7131 17.4973C12.9583 16.6199 12.101 16.1923 11.2048 16.0247C10.4077 15.8751 9.58971 15.8751 8.7926 16.0247C7.8964 16.1923 7.03911 16.6199 5.28426 17.4973L3.38787 18.4446C3.36882 18.4542 3.34766 18.4586 3.3264 18.4577C3.30513 18.4567 3.28447 18.4503 3.26635 18.4392C3.24824 18.428 3.23329 18.4124 3.22291 18.3938C3.21256 18.3752 3.2071 18.3544 3.20703 18.3332V8.30533C3.20703 7.15493 3.20742 6.28198 3.26452 5.58711L3.26453 5.58693C3.32204 4.88408 3.43703 4.35174 3.67483 3.88605L3.67504 3.88565C4.08651 3.07805 4.74309 2.42147 5.55068 2.01Z\",\n    stroke: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSave);\nexport default __webpack_public_path__ + \"static/media/save.f86939ed2359f1d5b9e8a10654878077.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Banners_img__v5X+d\"};","import css from \"./Banners.module.css\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-coverflow\";\r\nimport \"swiper/css/pagination\";\r\nimport \"swiper/css/navigation\";\r\nimport { Autoplay, EffectCoverflow, Navigation, Pagination } from \"swiper/modules\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Banners = ({ key, banner }) => {\r\n  return (\r\n    <>\r\n      {banner &&\r\n        [banner]?.map(( banners ) => (\r\n          <>\r\n            <Swiper\r\n              slidesPerView={1}\r\n              spaceBetween={30}\r\n              loop={true}\r\n              autoplay={{\r\n              delay: 3000, \r\n              disableOnInteraction: false, // Продолжать после ручного переключения\r\n            }}\r\n              pagination={{ el: \".swiper-pagination\", clickable: true }}\r\n              navigation={{\r\n                nextEl: \".swiper-button-next\",\r\n                prevEl: \".swiper-button-prev\",\r\n                clickable: true,\r\n              }}\r\n              modules={[EffectCoverflow, Pagination, Navigation, Autoplay]}\r\n              className={css.swiper_container}\r\n            >\r\n              {banners[0] && (\r\n                <SwiperSlide\r\n                  key={banners[0]}\r\n                  style={{\r\n                    width: \"80%\",\r\n                  }}\r\n                  className={css.swiper_slide}\r\n                >\r\n                  <img src={banners[0]} alt=\"\" className={css.img} />\r\n                </SwiperSlide>\r\n              )}\r\n\r\n              {banners[1] && (\r\n                <SwiperSlide\r\n                  key={banners[1]}\r\n                  style={{\r\n                    width: \"80%\",\r\n                  }}\r\n                  className={css.swiper_slide}\r\n                >\r\n                  <img src={banners[1]} alt=\"\" className={css.img} />\r\n                </SwiperSlide>\r\n              )}\r\n\r\n              {banners[2] && (\r\n                <SwiperSlide\r\n                  key={banners[2]}\r\n                  style={{\r\n                    width: \"80%\",\r\n                  }}\r\n                  className={css.swiper_slide}\r\n                >\r\n                  <img src={banners[2]} alt=\"\" className={css.img} />\r\n                </SwiperSlide>\r\n              )}\r\n\r\n              <div className=\"slider-controler\">\r\n                <div\r\n                  className=\"swiper-button-prev slider-arrow\"\r\n                  style={{ color: \"transparent\" }}\r\n                ></div>\r\n                <div\r\n                  className=\"swiper-button-next slider-arrow\"\r\n                  style={{ color: \"transparent\" }}\r\n                ></div>\r\n\r\n                <div\r\n                  className=\"swiper-pagination\"\r\n                  style={{\r\n                    position: \"relative\",\r\n                    bottom: \"2px\",\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </Swiper>\r\n          </>\r\n        ))}\r\n    </>\r\n\r\n    // <>\r\n    //   <Swiper\r\n    //     slidesPerView={1}\r\n    //     spaceBetween={30}\r\n    //     loop={true}\r\n    //     pagination={{ el: \".swiper-pagination\", clickable: true }}\r\n    //     navigation={{\r\n    //       nextEl: \".swiper-button-next\",\r\n    //       prevEl: \".swiper-button-prev\",\r\n    //       clickable: true,\r\n    //     }}\r\n    //     modules={[EffectCoverflow, Pagination, Navigation]}\r\n    //     className={css.swiper_container}\r\n    //   >\r\n    //     {banners[0] && (\r\n    //       <SwiperSlide\r\n    //         style={{\r\n    //           width: \"80%\",\r\n    //         }}\r\n    //         className={css.swiper_slide}\r\n    //       >\r\n    //         {console.log(banners)}\r\n    //         <img src={banners[0]} alt=\"\" className={css.img} />\r\n    //       </SwiperSlide>\r\n    //     )}\r\n\r\n    //     {banners[1] && (\r\n    //       <SwiperSlide\r\n    //         style={{\r\n    //           width: \"80%\",\r\n    //         }}\r\n    //         className={css.swiper_slide}\r\n    //       >\r\n    //         {console.log(banners)}\r\n    //         <img src={banners[1]} alt=\"\" className={css.img} />\r\n    //       </SwiperSlide>\r\n    //     )}\r\n\r\n    //     {banners[2] && (\r\n    //       <SwiperSlide\r\n    //         style={{\r\n    //           width: \"80%\",\r\n    //         }}\r\n    //         className={css.swiper_slide}\r\n    //       >\r\n    //         {console.log(banners)}\r\n    //         <img src={banners[2]} alt=\"\" className={css.img} />\r\n    //       </SwiperSlide>\r\n    //     )}\r\n    //     {/* // ))} */}\r\n    //     <div className=\"slider-controler\">\r\n    //       <div\r\n    //         className=\"swiper-button-prev slider-arrow\"\r\n    //         style={{ color: \"transparent\" }}\r\n    //       ></div>\r\n    //       <div\r\n    //         className=\"swiper-button-next slider-arrow\"\r\n    //         style={{ color: \"transparent\" }}\r\n    //       ></div>\r\n\r\n    //       <div\r\n    //         className=\"swiper-pagination\"\r\n    //         style={{\r\n    //           position: \"relative\",\r\n    //           bottom: \"2px\",\r\n    //         }}\r\n    //       ></div>\r\n    //     </div>\r\n    //   </Swiper>\r\n    // </>\r\n  );\r\n};\r\n\r\nBanners.propTypes = {\r\n  key: PropTypes.string,\r\n  banner: PropTypes.object,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"account_link\":\"PostsAdverticer_account_link__KQvK+\",\"img\":\"PostsAdverticer_img__tTNDF\",\"logo_container\":\"PostsAdverticer_logo_container__s9PUe\",\"logo\":\"PostsAdverticer_logo__kCAwM\",\"logo_description\":\"PostsAdverticer_logo_description__++EEw\",\"title\":\"PostsAdverticer_title__JMuPQ\",\"descriptionTest\":\"PostsAdverticer_descriptionTest__+rbOA\",\"links\":\"PostsAdverticer_links__5SwxS\",\"links_item\":\"PostsAdverticer_links_item__3mKMA\",\"link_img\":\"PostsAdverticer_link_img__TE+n5\",\"url\":\"PostsAdverticer_url__GPp6y\"};","import PropTypes from \"prop-types\";\r\nimport { ReactComponent as Icon_Links } from \"../../assets/icons/links.svg\";\r\nimport css from \"./PostsAdverticer.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const PostsAdverticer = ({\r\n  title,\r\n  description,\r\n  links,\r\n  profile_picture,\r\n}) => {\r\n  const profile = useSelector((state) => state.profile.data);\r\n\r\n  return (\r\n    <>\r\n      <div className={css.logo_container}>\r\n        <NavLink to={`/${profile?.id}`} className={css.account_link}>\r\n          <img src={profile_picture} alt=\"photo\" className={css.logo} />\r\n\r\n          <p className={`${css.logo_description} dark:text-white`}>{title}</p>\r\n        </NavLink>\r\n      </div>\r\n\r\n      <p className={`${css.title} dark:text-white`}>{title}</p>\r\n\r\n      <p className={`${css.descriptionTest} dark:text-white`}>{description}</p>\r\n\r\n      {links?.length > 0 && (\r\n        <p className={`${css.links} dark:text-white`}>Links:</p>\r\n      )}\r\n      <ul>\r\n        {links?.map(({ id, href, action }) =>\r\n          action?.length !== 0 ? (\r\n            <li key={id} className={`${css.links_item}`}>\r\n              {/* <img src=\"\" alt=\"\" className={css.link_img} /> */}\r\n              <Icon_Links />\r\n              <a\r\n                href={href}\r\n                target=\"blank\"\r\n                className={`${css.url} dark:text-white`}\r\n              >\r\n                {action}\r\n              </a>\r\n            </li>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nPostsAdverticer.propTypes = {\r\n  links: PropTypes.array,\r\n  description: PropTypes.string,\r\n  title: PropTypes.string,\r\n  data: PropTypes.object,\r\n  profile_picture: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"top_container\":\"PostDetailsPage_top_container__ZVsUJ\",\"back_arrow\":\"PostDetailsPage_back_arrow__KKWUO\",\"return\":\"PostDetailsPage_return__T8-D5\",\"post_container\":\"PostDetailsPage_post_container__YtIJz\",\"img\":\"PostDetailsPage_img__nb5Sn\",\"save_btn\":\"PostDetailsPage_save_btn__n3dd-\",\"iconSaveDark\":\"PostDetailsPage_iconSaveDark__2lUnw\",\"iconSave\":\"PostDetailsPage_iconSave__p555c\",\"iconDark\":\"PostDetailsPage_iconDark__WuKdg\"};","import { NavLink, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport css from \"./PostDetailsPage.module.css\";\r\nimport { ReactComponent as Icon_Back } from \"../../assets/icons/arrow_left.svg\";\r\nimport { ReactComponent as Save_Icon } from \"../../assets/icons/save.svg\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { getPostIdApi } from \"../../services/https/https\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useCustomContext } from \"../../services/Context/Context\";\r\nimport { LoaderSpiner } from \"../../services/loaderSpinner/LoaderSpinner\";\r\nimport { PostsAdverticer } from \"../../components/PostsAdverticer/PostsAdverticer\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport { Banners } from \"../../components/Banners/Banners\";\r\nimport { useSavePost } from \"../../services/hooks/useSavePost\";\r\n\r\nconst LOKAL_KEY = \"savedPost\";\r\n\r\nconst PostDetailsPage = () => {\r\n  const { theme, setTheme } = useCustomContext();\r\n  const { isSaved, toggleSave } = useSavePost();\r\n  const location = useLocation();\r\n  const locationRef = useRef(location.state?.from ?? \"/main\");\r\n  const navigate = useNavigate();\r\n  const { postsId, setPostsId } = useCustomContext();\r\n  const { postId } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const fetchData = (async () => {\r\n      try {\r\n        const { data } = await getPostIdApi(postId);\r\n\r\n        setPost(data);\r\n      } catch (error) {\r\n        ToastError(\"Error\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [postId]);\r\n\r\n  const handleBack = () => {\r\n    setPostsId(post?.id);\r\n    \r\n    if (window.history.length > 5) {    \r\n    navigate(-1); \r\n    } else {\r\n    navigate('/main'); \r\n  }\r\n};\r\n\r\n\r\n  // useEffect(() => {\r\n  //   setPostsId(post?.id);\r\n  // }, [post?.id, setPostsId]);\r\n\r\n  // const handleSavePostClick = (savedId) => {\r\n  //   if (savedPostId.includes(post.id)) {\r\n  //     const deletePost = savedPost.filter((post) => post.id !== savedId);\r\n\r\n  //     const deletePostId = savedPostId.filter((el) => el !== savedId);\r\n\r\n  //     setSavedPost(deletePost);\r\n\r\n  //     setSavedPostId(deletePostId);\r\n\r\n  //     ToastError(\"Post has been deleted\");\r\n  //     return;\r\n  //   }\r\n  //   setSavedPostId((prev) => {\r\n  //     if (prev.includes(savedId)) {\r\n  //       return prev.filter((postId) => postId !== savedId);\r\n  //     } else {\r\n  //       localStorage.setItem(\"savedPostId\", JSON.stringify([...prev, savedId]));\r\n  //       setSavedPost((prev) => [...prev, post]);\r\n  //       Toastify(\"Post successfully saved\");\r\n  //       return [...prev, savedId];\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  const handleSaveToggle = () => {\r\n    toggleSave(post);\r\n    // if (isSaved(post.id)) {\r\n    //   ToastError(\"Post has been deleted\");\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n\r\n      <div className={css.top_container}>\r\n        <NavLink\r\n          to={locationRef.current}\r\n          onClick={handleBack}\r\n          className={`${css.back_arrow} ${\r\n            theme === \"dark\" ? css.iconDark : \"\"\r\n          }`}\r\n        >\r\n          <Icon_Back />\r\n        </NavLink>\r\n        <p className={css.return}>{post?.title}</p>\r\n      </div>\r\n\r\n      {loading && (\r\n        <div className=\"loader\">\r\n          <LoaderSpiner />\r\n        </div>\r\n      )}\r\n\r\n      {post && (\r\n        <div key={post.id} className={css.post_container}>\r\n          <Banners banner={post.banners} />\r\n\r\n          <button\r\n            type=\"button\"\r\n            // onClick={() => handleSavePostClick(post.id)}\r\n            onClick={handleSaveToggle}\r\n            className={css.save_btn}\r\n          >\r\n            {!isSaved(post.id) ? (\r\n              <div className={theme === \"dark\" ? css.iconDark : \"\"}>\r\n                <Save_Icon />\r\n              </div>\r\n            ) : (\r\n              <div\r\n                className={theme === \"dark\" ? css.iconSaveDark : css.iconSave}\r\n              >\r\n                <Save_Icon />\r\n              </div>\r\n            )}\r\n          </button>\r\n\r\n          <PostsAdverticer\r\n            title={post.title}\r\n            description={post.description}\r\n            links={post.links}\r\n            profile_picture={post?.advertiser?.profile_picture?.replace(\r\n              \"image/upload/\",\r\n              \"\"\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetailsPage;\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 2500,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n","import { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { ToastError } from \"../ToastError/ToastError\";\r\nimport {\r\n  getSavePostApi,\r\n  postSavePostApi,\r\n  postUnsavePostApi,\r\n} from \"../https/https\";\r\nimport { Toastify } from \"../Toastify/Toastify\";\r\n\r\nconst LOKAL_KEY = \"savedPost\";\r\n\r\nexport function useSavePost() {\r\n  const { token } = useAuth();\r\n\r\n  const isGuestRef = useRef(true); // ← Инициализация ref\r\n  const disabledRef = useRef(false);\r\n\r\n  const [savedPostIds, setSavedPostIds] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(\"savedPostId\")) ?? [];\r\n  });\r\n\r\n  const [savedPosts, setSavedPosts] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(LOKAL_KEY)) ?? [];\r\n  });\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  // 💡 Определяем, был ли пользователь гостем\r\n  useEffect(() => {\r\n    try {\r\n      const raw = localStorage.getItem(\"persist:auth\");\r\n      if (!raw) {\r\n        isGuestRef.current = true;\r\n        return;\r\n      }\r\n\r\n      const parsed = JSON.parse(raw);\r\n      const persistedToken = parsed.token ? JSON.parse(parsed.token) : null;\r\n\r\n      isGuestRef.current = !persistedToken;\r\n    } catch (e) {\r\n      isGuestRef.current = true;\r\n    }\r\n  }, []);\r\n\r\n  // 🔁 Синхронизация при логине или очистка при logout\r\n  useEffect(() => {\r\n    if (!token) {\r\n      if (!isGuestRef.current) {\r\n        // logout\r\n        setSavedPostIds([]);\r\n        setSavedPosts([]);\r\n\r\n        localStorage.removeItem(\"savedPostId\");\r\n        localStorage.removeItem(LOKAL_KEY);\r\n        window.location.reload();\r\n      }\r\n      localStorage.setItem(\"savedPostId\", JSON.stringify([]));\r\n      localStorage.setItem(LOKAL_KEY, JSON.stringify([]));\r\n      return;\r\n    }\r\n\r\n    // Если вошёл — синхронизируем\r\n    (async () => {\r\n      try {\r\n        const serverPosts = await getSavePostApi();\r\n        const serverIds = serverPosts.map((p) => p.id);\r\n\r\n        const localSavedPosts =\r\n          JSON.parse(localStorage.getItem(LOKAL_KEY)) ?? [];\r\n        const postsToSync = localSavedPosts.filter(\r\n          (post) => !serverIds.includes(post.id)\r\n        );\r\n\r\n        for (const post of postsToSync) {\r\n          try {\r\n            await postSavePostApi(post.id, post);\r\n          } catch (err) {\r\n            console.error(`Ошибка синхронизации поста ID=${post.id}`, err);\r\n          }\r\n        }\r\n\r\n        const updatedIds = [\r\n          ...new Set([...serverIds, ...postsToSync.map((p) => p.id)]),\r\n        ];\r\n        setSavedPostIds(updatedIds);\r\n        setSavedPosts([]);\r\n\r\n        localStorage.removeItem(\"savedPostId\");\r\n        localStorage.removeItem(LOKAL_KEY);\r\n      } catch (err) {\r\n        ToastError(err?.message);\r\n      }\r\n    })();\r\n  }, [token]);\r\n\r\n  // 💾 Сохраняем в localStorage только если пользователь — гость\r\n  useEffect(() => {\r\n    if (!token && isGuestRef.current) {\r\n      localStorage.setItem(\"savedPostId\", JSON.stringify(savedPostIds));\r\n      localStorage.setItem(LOKAL_KEY, JSON.stringify(savedPosts));\r\n    }\r\n  }, [savedPostIds, savedPosts, token]);\r\n\r\n  const toggleSave = useCallback(\r\n    async (post) => {\r\n      const postId = post.id;\r\n\r\n      if (token) {\r\n        try {\r\n          if (savedPostIds.includes(postId)) {\r\n            await postUnsavePostApi(postId);\r\n            ToastError(\"Post has been deleted\");\r\n            setSavedPostIds((ids) => ids.filter((id) => id !== postId));\r\n          } else {\r\n            await postSavePostApi(postId, {});\r\n            Toastify(\"Post successfully saved\");\r\n            setSavedPostIds((ids) => [...ids, postId]);\r\n          }\r\n        } catch (err) {\r\n          ToastError(err?.message);\r\n        }\r\n      } else {\r\n        // Гость\r\n        setSavedPostIds((ids) =>\r\n          ids.includes(postId)\r\n            ? ids.filter((id) => id !== postId)\r\n            : [...ids, postId]\r\n        );\r\n\r\n        setSavedPosts((posts) => {\r\n          const exists = posts.some((p) => p.id === postId);\r\n          if (exists) {\r\n            ToastError(\"Post has been deleted\");\r\n            return posts.filter((p) => p.id !== postId);\r\n          } else {\r\n            Toastify(\"Post successfully saved\");\r\n            return [...posts, post];\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [token, savedPostIds, savedPosts]\r\n  );\r\n\r\n  const isSaved = useCallback(\r\n    (postId) => savedPostIds.includes(postId),\r\n    [savedPostIds]\r\n  );\r\n\r\n  return {\r\n    savedPostIds,\r\n    savedPosts,\r\n    isSaved,\r\n    toggleSave,\r\n    isDisabled,\r\n    setIsDisabled,\r\n  };\r\n}\r\n"],"names":["_path","_path2","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","_path3","SvgLinks","SvgSave","Banners","_ref2","key","banner","_jsx","_Fragment","children","map","banners","_jsxs","Swiper","slidesPerView","spaceBetween","loop","autoplay","delay","disableOnInteraction","pagination","el","clickable","navigation","nextEl","prevEl","modules","EffectCoverflow","Pagination","Navigation","Autoplay","className","css","swiper_container","SwiperSlide","style","swiper_slide","src","alt","img","color","position","bottom","PostsAdverticer","description","links","profile_picture","profile","useSelector","state","data","NavLink","to","href","action","Icon_Links","target","PostDetailsPage","_location$state$from","_location$state","_post$advertiser","_post$advertiser$prof","theme","setTheme","useCustomContext","isSaved","toggleSave","useSavePost","location","useLocation","locationRef","useRef","from","navigate","useNavigate","postsId","setPostsId","postId","useParams","post","setPost","useState","loading","setLoading","useEffect","getPostIdApi","error","ToastError","ToastContainer","current","onClick","handleBack","window","history","Icon_Back","LoaderSpiner","type","handleSaveToggle","Save_Icon","advertiser","replace","Toastify","message","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","LOKAL_KEY","token","useAuth","isGuestRef","savedPostIds","setSavedPostIds","_JSON$parse","JSON","parse","localStorage","getItem","savedPosts","setSavedPosts","_JSON$parse2","isDisabled","setIsDisabled","raw","parsed","persistedToken","removeItem","reload","setItem","stringify","_JSON$parse3","serverIds","getSavePostApi","p","postsToSync","filter","includes","postSavePostApi","err","console","updatedIds","Set","useCallback","async","postUnsavePostApi","ids","posts","some"],"sourceRoot":""}