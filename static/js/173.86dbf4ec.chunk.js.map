{"version":3,"file":"static/js/173.86dbf4ec.chunk.js","mappings":"yHACA,QAAgC,oCAAhC,EAA0E,0BAA1E,EAAiH,iCAAjH,EAAiK,mCAAjK,EAA+M,+BAA/M,EAAgQ,sC,+GCkBhQ,MAqNA,EArNqBA,KAAO,IAADC,EAAAC,EAAAC,EACzB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAERC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAuBC,IAA4BF,EAAAA,EAAAA,WAAS,IAC5DG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,KAC1BK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,CAAC,IACjCO,EAAOC,IAAYR,EAAAA,EAAAA,WAAS,IAE/B,CACC,CAAES,IAAIC,EAAAA,EAAAA,MAAUC,IAAK,GAAIC,KAAM,QAG7BC,EAAMC,IAAWd,EAAAA,EAAAA,WAAS,IASb,IAAhBG,EAAKY,QAAgB,CACnBC,YAAa,GACbC,MAAO,GACPC,SAAU,CAAEN,KAAM,IAClBO,YAAa,CAAEP,KAAM,IACrBQ,aAAoB,YACpBC,kBAAmB,GACnBC,QAAS,OAKfC,EAAAA,EAAAA,YAAU,KACR,OAACC,IAMC,MAAM,KAAErB,SAAesB,EAAAA,EAAAA,MAEvBnB,EAA+B,QAArBoB,EAACvB,EAAKwB,uBAAe,IAAAD,OAAA,EAApBA,EAAsBE,QAAQ,gBAAiB,IAC3D,EATD,EASI,GACH,KAEHL,EAAAA,EAAAA,YAAU,KACUC,WAChB,IAAK,IAADK,EACF,GAAIrC,EAASsC,MAIX,OAHA1B,EAAQZ,EAASsC,OACjBhB,EAAQtB,EAASsC,YACjBtB,EAAShB,EAASsC,MAAMvB,OAI1B,MAAMwB,QAAiBC,EAAAA,EAAAA,IAAapC,EAAOqC,YAEb,IAADC,EAMCC,EAAAC,EAN9B,GAAwB,MAApBL,EAASM,OAGX,OAFAjC,EAAgB,OAAR2B,QAAQ,IAARA,OAAQ,EAARA,EAAU5B,WAClBK,EAAiB,OAARuB,QAAQ,IAARA,GAAc,QAANG,EAARH,EAAU5B,YAAI,IAAA+B,OAAN,EAARA,EAAgB3B,OAI3B,GAAyB,OAAb,OAARwB,QAAQ,IAARA,OAAQ,EAARA,EAAUM,QAMZ,OALAC,EAAAA,EAAAA,IAAmB,OAARP,QAAQ,IAARA,GAAkB,QAAVI,EAARJ,EAAUA,gBAAQ,IAAAI,GAAM,QAANC,EAAlBD,EAAoBhC,YAAI,IAAAiC,OAAhB,EAARA,EAA0BG,SAAU,yBAC/CC,YAAW,KACT9C,EAAS,QAAQ,GAChB,KAKL,MAAM,IAAI+C,OACA,OAARV,QAAQ,IAARA,GAAc,QAANF,EAARE,EAAU5B,YAAI,IAAA0B,OAAN,EAARA,EAAgBU,UAAkB,OAARR,QAAQ,IAARA,OAAQ,EAARA,EAAUW,UAAW,mBAEnD,CAAE,MAAOC,GACPC,QAAQD,MAAM,4BAA6BA,IAC3CL,EAAAA,EAAAA,GAAWK,EAAMD,SAAW,mBAC9B,GAGFG,EAAW,GACV,CAACjD,EAAOqC,WAAYzC,EAASsC,MAAOpC,KAUvC6B,EAAAA,EAAAA,YAAU,KAAO,IAADuB,EAAAC,EAAAC,EAAAC,EAEI,MAAZ,OAAJ9C,QAAI,IAAJA,OAAI,EAAJA,EAAMc,QACF,OAAJd,QAAI,IAAJA,GAAa,QAAT2C,EAAJ3C,EAAMmB,eAAO,IAAAwB,GAAbA,EAAeI,MAAMC,GAA8B,KAAb,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQpC,WACV,KAA1B,OAAJZ,QAAI,IAAJA,GAAiB,QAAb4C,EAAJ5C,EAAMa,mBAAW,IAAA+B,OAAb,EAAJA,EAAmBhC,SACM,MAArB,OAAJZ,QAAI,IAAJA,GAAc,QAAV6C,EAAJ7C,EAAMe,gBAAQ,IAAA8B,OAAV,EAAJA,EAAgBpC,OACY,MAAxB,OAAJT,QAAI,IAAJA,GAAiB,QAAb8C,EAAJ9C,EAAMgB,mBAAW,IAAA8B,OAAb,EAAJA,EAAmBrC,MAEnBb,GAAa,GAEbA,GAAa,EACf,GACC,CACG,OAAJI,QAAI,IAAJA,GAAc,QAAVd,EAAJc,EAAMe,gBAAQ,IAAA7B,OAAV,EAAJA,EAAgBuB,KACZ,OAAJT,QAAI,IAAJA,GAAiB,QAAbb,EAAJa,EAAMgB,mBAAW,IAAA7B,OAAb,EAAJA,EAAmBsB,KACf,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMc,MACF,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,QACF,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMa,cAwCR,OACEoC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,gBAEHC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,KAObtD,IACAqD,EAAAA,EAAAA,KAAA,OAAAD,SACGlD,IAAyB,QAAjBZ,EAAAiE,OAAOC,KAAKtD,UAAK,IAAAZ,OAAA,EAAjBA,EAAmBwB,QAAS,GACnCqC,EAAAA,EAAAA,MAAA,QAAMM,SAlDSlC,UACvBmC,EAAEC,iBAEF,IACE,MAAMC,QAAYC,EAAAA,EAAAA,IAAalE,EAAOqC,WAAY,IAC7C9B,EACHe,SAAU,CAAEN,KAAMT,EAAKe,SAASN,MAChCO,YAAa,CAAEP,KAAMT,EAAKgB,YAAYP,MACtCyB,OAAQ,YAYV,MATmB,MAAfwB,EAAIxB,QAAiC,MAAfwB,EAAIxB,SAC5BnC,GAAyB,GAEzBsC,YAAW,KACT9C,EAAS,QAAQ,GAChB,MAIC,IAAI+C,MAAM,mBAClB,CAAE,MAAOE,IACPL,EAAAA,EAAAA,GAAWK,EAAMD,SAAW,mBAC9B,GA2ByCW,SAAA,EAC/BC,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACTlD,KAAMV,EACNW,QAASV,EACTG,MAAOA,EACPC,SAAUA,KAGZ4C,EAAAA,EAAAA,MAAA,OAAKY,UAAWC,EAAkBZ,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UACEY,KAAK,SACLF,UAAWC,EACXE,QArCMC,KACpBxB,QAAQyB,IAAIxD,GACZnB,EAAS,oCAAqC,CAC5CoC,MAAO,CACL3B,OACAE,UACAiE,KAAM9E,EAAS+E,WAEjB,EA6BmClB,UAEvBC,EAAAA,EAAAA,KAAA,QAAMU,UAAWC,EAAaZ,SAAC,gBAIjCC,EAAAA,EAAAA,KAAA,UACEY,KAAK,SACLF,UAAW,GAAGC,MACZnE,EAAYmE,EAAiBA,IAE/BO,UAAU1E,EAAyBuD,UAEnCC,EAAAA,EAAAA,KAAA,QAAMU,UAAWC,EAAoBZ,SAAC,qBAK5CC,EAAAA,EAAAA,KAAA,OAAKU,UAAU,SAAQX,UACrBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAY,QAKpBxE,IACCmD,EAAAA,EAAAA,MAACsB,EAAAA,EAAuB,CAAArB,SAAA,CAAC,uCACYC,EAAAA,EAAAA,KAAA,SAAM,sCAIzC,C,uDCjOV,IAAIqB,GAAgB,EAEb,MAAMC,EAAYlC,IACnBiC,IAEJA,GAAgB,GAEhBE,EAAAA,EAAAA,IAAM,GAAGnC,IAAW,CAClBoC,QAASA,KACPH,GAAgB,CAAK,EAEvBI,SAAU,YACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UACP,C","sources":["webpack://nola/./src/pages/EditPostPage/EditPostPage.module.css?dcc4","pages/EditPostPage/EditPostPage.jsx","services/Toastify/Toastify.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn_container\":\"EditPostPage_btn_container__mlXEg\",\"btn\":\"EditPostPage_btn__iiJWb\",\"btn_active\":\"EditPostPage_btn_active__L9IGU\",\"btn_disabled\":\"EditPostPage_btn_disabled__SqYol\",\"btn_back\":\"EditPostPage_btn_back__L8v28\",\"btn_back_active\":\"EditPostPage_btn_back_active__PZts-\"};","import css from \"./EditPostPage.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  getAccountApi,\r\n  getPostApi,\r\n  getPostIdApi,\r\n  getPostIdModerationApi,\r\n  patchPostApi,\r\n  postPostApi,\r\n} from \"../../services/https/https\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { CreatePost } from \"../../components/CreatePost/CreatePost\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport { MessagePostOnModeration } from \"../../components/MessagePostOnModeration/MessagePostOnModeration\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { LoaderSpiner } from \"../../services/loaderSpinner/LoaderSpinner\";\r\n\r\nconst EditPostPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  // const [formConfig, setFormConfig] = useState(false);\r\n  const [validForm, setValidForm] = useState(false);\r\n  const [postSuccessfullyAdded, setPostSuccessfullyAdded] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [profile, setProfile] = useState({});\r\n  const [links, setLinks] = useState(() => {\r\n    return (\r\n      // JSON.parse(localStorage.getItem(\"createPost\"))?.links ??\r\n      [{ id: nanoid(), url: \"\", name: \"\" }]\r\n    );\r\n  });\r\n  const [post, setPost] = useState(() => {\r\n    // try {\r\n    //   const saved = localStorage.getItem(\"createPost\");\r\n    //   if (saved) return JSON.parse(saved);\r\n    // } catch (e) {\r\n    //   console.warn(\"Ошибка при чтении localStorage:\", e);\r\n    // }\r\n\r\n    return (\r\n      data.length !== 0 || {\r\n        description: \"\",\r\n        title: \"\",\r\n        category: { name: \"\" },\r\n        subcategory: { name: \"\" },\r\n        callToAction: \"\" || \"Read more\",\r\n        callToActionLinks: \"\",\r\n        banners: [],\r\n      }\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      // const hasKey = localStorage.getItem(\"createPost\") !== null;\r\n      //     if (hasKey) {\r\n      //     return\r\n      //   }\r\n\r\n      const { data } = await getAccountApi();\r\n\r\n      setProfile(data.profile_picture?.replace(\"image/upload/\", \"\"));\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (location.state) {\r\n          setData(location.state);\r\n          setPost(location.state);\r\n          setLinks(location.state.links);\r\n          return;\r\n        }\r\n\r\n        const response = await getPostIdApi(params.editPostId);\r\n\r\n        if (response.status === 200) {\r\n          setData(response?.data);\r\n          setLinks(response?.data?.links);\r\n          return;\r\n        }\r\n\r\n        if (response?.status === 403) {\r\n          ToastError(response?.response?.data?.detail || \"Try again later.\");\r\n          setTimeout(() => {\r\n            navigate(\"/main\");\r\n          }, 3000);\r\n\r\n          return;\r\n        }\r\n\r\n        throw new Error(\r\n          response?.data?.detail || response?.message || \"Try again later.\"\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error fetching post data:\", error);\r\n        ToastError(error.message || \"Try again later.\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [params.editPostId, location.state, navigate]);\r\n\r\n  // const handleChangePost = ({ target }) => {\r\n  //   const { name, value } = target;\r\n  //   setPost({\r\n  //     ...post,\r\n  //     [name]: value,\r\n  //   });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      data?.title !== \"\" &&\r\n      data?.banners?.some((banner) => banner?.length !== 0) &&\r\n      data?.description?.length !== 0 &&\r\n      data?.category?.name !== \"\" &&\r\n      data?.subcategory?.name !== \"\"\r\n    ) {\r\n      setValidForm(true);\r\n    } else {\r\n      setValidForm(false);\r\n    }\r\n  }, [\r\n    data?.category?.name,\r\n    data?.subcategory?.name,\r\n    data?.title,\r\n    data?.banners,\r\n    data?.description,\r\n  ]);\r\n\r\n  const handleSubmitPost = async (e) => {\r\n    e.preventDefault();\r\n    // setFormConfig(true); // delete later\r\n    try {\r\n      const res = await patchPostApi(params.editPostId, {\r\n        ...data,\r\n        category: { name: data.category.name },\r\n        subcategory: { name: data.subcategory.name },\r\n        status: \"pending\",\r\n      });\r\n\r\n      if (res.status === 201 || res.status === 200) {\r\n        setPostSuccessfullyAdded(true);\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/main\");\r\n        }, 3000);\r\n        // localStorage.removeItem(\"createPost\");\r\n      }\r\n\r\n      throw new Error(\"Try again later.\");\r\n    } catch (error) {\r\n      ToastError(error.message || \"Try again later.\");\r\n    }\r\n  };\r\n\r\n  const handlePreview = () => {\r\n    console.log(post);\r\n    navigate(\"/main/addPost/previewAdvertisemet\", {\r\n      state: {\r\n        data,\r\n        profile,\r\n        from: location.pathname,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      EditPostPage\r\n      <ToastContainer />\r\n      {/* {formConfig && (\r\n        <HandleFormConfig\r\n          message={\"Current post has been edited\"}\r\n          navigatePage={\"/main/accountAdverticer\"}\r\n        />\r\n      )} */}\r\n      {!postSuccessfullyAdded && (\r\n        <div>\r\n          {data && Object.keys(data)?.length > 0 ? (\r\n            <form onSubmit={handleSubmitPost}>\r\n              <CreatePost\r\n                post={data}\r\n                setPost={setData}\r\n                links={links}\r\n                setLinks={setLinks}\r\n              />\r\n\r\n              <div className={css.btn_container}>\r\n                {/* <NavLink to=\"/main/addPost/previewAdvertisemet\"> */}\r\n                <button\r\n                  type=\"button\"\r\n                  className={css.btn}\r\n                  onClick={handlePreview}\r\n                >\r\n                  <span className={css.btn_back}> Preview</span>\r\n                </button>\r\n                {/* </NavLink> */}\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`${css.btn}  ${\r\n                    validForm ? css.btn_active : css.btn_disabled\r\n                  }`}\r\n                  disabled={validForm ? false : true}\r\n                >\r\n                  <span className={css.btn_back_active}>Publish</span>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          ) : (\r\n            <div className=\"loader\">\r\n              <LoaderSpiner />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      {postSuccessfullyAdded && (\r\n        <MessagePostOnModeration>\r\n          Advertisement is under moderation. <br />\r\n          It will take about 15 minutes.\r\n        </MessagePostOnModeration>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPostPage;\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nlet isToastActive = false;\r\n\r\nexport const Toastify = (message) => {\r\n  if (isToastActive) return;\r\n\r\n  isToastActive = true;\r\n\r\n  toast(`${message}`, {\r\n    onClose: () => {\r\n      isToastActive = false;\r\n    },\r\n    position: \"top-right\",\r\n    autoClose: 2500,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["EditPostPage","_data$category2","_data$subcategory2","_Object$keys","location","useLocation","navigate","useNavigate","params","useParams","validForm","setValidForm","useState","postSuccessfullyAdded","setPostSuccessfullyAdded","data","setData","profile","setProfile","links","setLinks","id","nanoid","url","name","post","setPost","length","description","title","category","subcategory","callToAction","callToActionLinks","banners","useEffect","async","getAccountApi","_data$profile_picture","profile_picture","replace","_response$data2","state","response","getPostIdApi","editPostId","_response$data","_response$response","_response$response$da","status","ToastError","detail","setTimeout","Error","message","error","console","fetchData","_data$banners","_data$description","_data$category","_data$subcategory","some","banner","_jsxs","children","_jsx","ToastContainer","Object","keys","onSubmit","e","preventDefault","res","patchPostApi","CreatePost","className","css","type","onClick","handlePreview","log","from","pathname","disabled","LoaderSpiner","MessagePostOnModeration","isToastActive","Toastify","toast","onClose","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}