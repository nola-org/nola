{"version":3,"file":"static/js/689.2d794a7b.chunk.js","mappings":"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","sources":["assets/icons/circle-exclamation-mark.svg","webpack://nola/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://nola/./src/components/GoogleButton/GoogleAndFacebookButton.module.css?e16a","components/GoogleButton/GoogleAndFacebookButton.jsx","webpack://nola/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://nola/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx","services/Toastify/Toastify.js"],"sourcesContent":["var _path, _circle, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCircleExclamationMark(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 10.0067V10\",\n    stroke: \"#DA2E2E\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 8.00008,\n    cy: 8.00008,\n    r: 4.83333,\n    stroke: \"#DA2E2E\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 6V8.33333\",\n    stroke: \"#DA2E2E\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCircleExclamationMark);\nexport default __webpack_public_path__ + \"static/media/circle-exclamation-mark.17ba79873a47e9a43cf4f3584ca4f5b5.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"buttonForm\":\"Button_buttonForm__dlu6b\",\"disabled\":\"Button_disabled__7ePqW\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Button.module.css\";\r\n\r\nconst Button = ({ label, onClick, disabled }) => {\r\n  return (\r\n    <button className={`${css.buttonForm} ${disabled ? css.disabled : \"\"}`} onClick={onClick} disabled={disabled}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"GoogleAndFacebookButton_buttonContainer__3YpLe\",\"buttonForm\":\"GoogleAndFacebookButton_buttonForm__KUp+P\",\"separatorLine\":\"GoogleAndFacebookButton_separatorLine__t75wC\",\"orText\":\"GoogleAndFacebookButton_orText__NK3BJ\",\"icon\":\"GoogleAndFacebookButton_icon__e2Xga\"};","import { useGoogleLogin } from \"@react-oauth/google\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FaFacebook } from \"react-icons/fa\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport FacebookLogin from \"@greatsumini/react-facebook-login\";\r\nimport css from \"./GoogleAndFacebookButton.module.css\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { googleLoginThunk } from \"../../redux/auth/googleLoginThunk\";\r\nimport { instance } from \"../../services/axios\";\r\n\r\nconst GoogleAndFacebookButton = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n\r\n  const handleGoogleLogin = () => {\r\n    window.location.href =\r\n      \"https://nola-spot-python-1.onrender.com/auth/login/google-oauth2/\";\r\n};\r\n//   const googleLogin = useGoogleLogin({\r\n//   flow: \"auth-code\",\r\n//   onSuccess: async (tokenResponse) => {\r\n//     try {\r\n//       const authCode = tokenResponse.code;\r\n//       console.log(\"Google login successful. Code:\", authCode);\r\n\r\n//       // const response = await fetch(\"https://nola-spot-python-1.onrender.com/auth/login/google-oauth2/\", {\r\n//       //   method: \"GET\",\r\n//       //   headers: {\r\n//       //     \"Content-Type\": \"application/json\",\r\n//       //   },\r\n//       //   body: JSON.stringify({ code: authCode, redirect_uri: \"https://nola-org.github.io/nola/\" }),\r\n//       // });\r\n\r\n//       const response = await fetch(\r\n//         `https://nola-spot-python-1.onrender.com/auth/login/google-oauth2/?code=${authCode}`\r\n//   // &redirect_uri=https://nola-org.github.io/nola/profile\r\n  \r\n// );\r\n\r\n//       if (!response.ok) throw new Error(\"Failed to exchange code\");\r\n\r\n//       const data = await response.json();\r\n//       console.log(\"Backend login success:\", data);\r\n//       // сохранить токены, авторизовать, редирект на /main\r\n//     } catch (error) {\r\n//       ToastError(\"Google auth failed. Try again later.\");\r\n//       console.error(\"Google auth failed:\", error);\r\n//     }\r\n//   },\r\n//   onError: (error) => {\r\n//     ToastError(\"Google auth failed. Try again later.\");\r\n//     console.error(\"Google login failed.\", error);\r\n//   },\r\n//       redirect_uri: \"https://nola-org.github.io/nola/profile\",\r\n//     // redirect_uri: \"http://localhost:3000//nola/profile\",\r\n// });\r\n\r\n\r\n//   const googleLogin = useGoogleLogin({\r\n//   onSuccess: async (tokenResponse) => {\r\n//     try {\r\n//       console.log(\"Google login successful\", tokenResponse);\r\n//       window.location.href =\r\n//         \"https://nola-spot-python-1.onrender.com/auth/login/google-oauth2/\";\r\n//     } catch (error) {\r\n//       ToastError(\"Google auth failed. Try again later.\");\r\n//       console.error(\"Google auth failed:\", error);\r\n//     }\r\n//   },\r\n//   onError: (error) => {\r\n//     ToastError(\"Google auth failed. Try again later.\");\r\n//     console.error(\"Google login failed.\", error);\r\n//   },\r\n//   flow: 'auth-code', // если вы используете backend flow (Django), то нужен auth-code\r\n//   redirect_uri: \"https://nola-org.github.io/nola/\", // Указать явно\r\n// });\r\n\r\n  // const googleLogin = useGoogleLogin({\r\n  //   onSuccess: async (tokenResponse) => {\r\n  //     try {\r\n  //       console.log(\"Google login successful\", tokenResponse);\r\n  //         const GOOGLE_AUTH_URL = \"https://nola-spot-python-1.onrender.com/auth/login/google-oauth2/\";\r\n  // window.location.href = GOOGLE_AUTH_URL;\r\n  //       // window.location.href =\r\n  //       //   \"https://nola-spot-python-1.onrender.com/auth/login/google-oauth2/\";\r\n\r\n  //       // Отправляем код на бэкенд для верификации - redax\r\n\r\n  //       // Сохраняем токен и перенаправляем\r\n  //       // localStorage.setItem(\"authToken\", res.data.token);\r\n  //       // await dispatch(googleLoginThunk(tokenResponse.access_token)).unwrap();\r\n  //       // setRedirect(true);\r\n  //       // navigate(\"/main/accountAdverticer\");\r\n  //     } catch (error) {\r\n  //       ToastError(\"Google auth failed. Try again later.\");\r\n  //       console.error(\"Google auth failed:\", error);\r\n  //     }\r\n  //   },\r\n  //   onError: (error) => {\r\n  //     ToastError(\"Google auth failed. Try again later.\");\r\n  //     console.error(\"Google login failed.\", error);\r\n  //   },\r\n  // });\r\n\r\n  const handleFacebookSuccess = (response) => {\r\n    console.log(\"Facebook login successful\", response);\r\n    setRedirect(true);\r\n    navigate(\"/main/accountAdverticer\");\r\n  };\r\n\r\n  const handleFacebookFailure = (error) => {\r\n    console.error(\"Facebook login failed. Try again later.\");\r\n  };\r\n\r\n  return (\r\n    <div className={css.buttonContainer}>\r\n      <ToastContainer />\r\n      <div className={css.separatorLine}></div>\r\n      <div className={`${css.orText} dark:bg-black`}>or</div>\r\n\r\n      <button\r\n        // onClick={() => googleLogin()}\r\n        onClick={handleGoogleLogin}\r\n        className={`${css.buttonForm} dark:bg-black dark:border-white dark:text-white`}\r\n      >\r\n        <FcGoogle className={css.icon} />\r\n        Continue with Google\r\n      </button>\r\n\r\n      {/* <FacebookLogin\r\n        appId=\"366622046395430\"\r\n        autoLoad={false}\r\n        fields=\"name,email,picture\"\r\n        callback={handleFacebookSuccess}\r\n        onFailure={handleFacebookFailure}\r\n        render={({ onClick }) => (\r\n          <button\r\n            onClick={onClick}\r\n            className={`${css.buttonForm} dark:bg-black dark:border-white dark:text-white`}\r\n          >\r\n            <FaFacebook className={css.icon} />\r\n            Continue with Facebook\r\n          </button>\r\n        )}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleAndFacebookButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__bhG2y\",\"modal\":\"Modal_modal__quYqb\",\"children\":\"Modal_children__lIYUp\",\"modal_title\":\"Modal_modal_title__v+1Yd\",\"modal_descr\":\"Modal_modal_descr__a-7tP\",\"modal_btn\":\"Modal_modal_btn__0avU-\",\"modal_text\":\"Modal_modal_text__pEPCJ\"};","import css from \"./Modal.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Modal = ({\r\n  confirm,\r\n  cancel,\r\n  title,\r\n  description,\r\n  info,\r\n  handleToggleModal,\r\n  btn_text_confirm = \"Confirm\",\r\n  btn_text_cancel = \"Cancel\",\r\n  childrenEl = false,\r\n  children,\r\n}) => {\r\n  const handleCloseBackdrop = (e) => {\r\n    const { target, currentTarget } = e;\r\n    if (target === currentTarget) {\r\n      handleToggleModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.backdrop} onClick={handleCloseBackdrop}>\r\n      <div className={`${css.modal} dark:bg-black`}>\r\n        <div className={css.children}>\r\n          {childrenEl ? (\r\n            children\r\n          ) : (\r\n            <>\r\n              <h2 className={css.modal_title}>{title}</h2>\r\n              <p className={css.modal_descr}>{description}</p>\r\n              {info ? <p className={css.modal_descr}>{info}</p> : \"\"}\r\n              <button type=\"button\" className={css.modal_btn} onClick={confirm}>\r\n                {btn_text_confirm}\r\n              </button>\r\n              <p\r\n                type=\"button\"\r\n                className={`${css.modal_text} dark:text-white`}\r\n                onClick={cancel}\r\n              >\r\n                {btn_text_cancel}\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  childrenEl: PropTypes.string,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n  confirm: PropTypes.func,\r\n  cancel: PropTypes.func,\r\n  title: PropTypes.string,\r\n  info: PropTypes.string,\r\n  description: PropTypes.string,\r\n  btn_text_confirm: PropTypes.string,\r\n  btn_text_cancel: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputForm\":\"RegistrationForm_inputForm__d0Ns8\",\"active\":\"RegistrationForm_active__ZlY3k\",\"textInfo\":\"RegistrationForm_textInfo__Y3zTz\",\"spanPolicy\":\"RegistrationForm_spanPolicy__GpiXv\",\"inputContainer\":\"RegistrationForm_inputContainer__ZXFHh\",\"passwordInputContainer\":\"RegistrationForm_passwordInputContainer__sNHEd\",\"img_error\":\"RegistrationForm_img_error__BayQO\",\"eyeIcon\":\"RegistrationForm_eyeIcon__u2D5U\",\"error\":\"RegistrationForm_error__0qlsE\",\"errorText\":\"RegistrationForm_errorText__UbcnM\",\"errorPlaceholder\":\"RegistrationForm_errorPlaceholder__wgmYb\",\"btn_text\":\"RegistrationForm_btn_text__tKOVf\",\"btn_valid\":\"RegistrationForm_btn_valid__J77d5\"};","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport css from \"./RegistrationForm.module.css\";\r\nimport Button from \"../Button\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport * as yup from \"yup\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerThunk } from \"../../redux/auth/authThunk\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport error from \"../../assets/icons/circle-exclamation-mark.svg\";\r\nimport { Modal } from \"../Modal/Modal\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .matches(\r\n      /^[a-zA-Z0-9._%+-]+@(gmail\\.com|ukr\\.net|meta\\.ua)$/,\r\n      \"Please enter valid characters\"\r\n    )\r\n    .matches(/^[^\\s]*$/, \"Please enter valid characters\")\r\n    .matches(/^[^а-яА-ЯіІїЇєЄ]*$/, \"Please enter valid characters\")\r\n    .matches(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Please enter a valid email address\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .matches(RegExp('[!@#$%^&*(),.?\":{}|<>+=-]'), \"Special symbols is required\")\r\n    .matches(/^(?=.*[a-z])/, \" Must Contain One Lowercase Character\")\r\n    .matches(/^(?=.*[A-Z])/, \"  Must Contain One Uppercase Character\")\r\n    .min(8, \"Password must be at least 8 characters\")\r\n    .max(16, \"The password must be no more than 16 characters.\"),\r\n  password_confirm: yup\r\n    .string()\r\n    .required(\"Confirm Password is required\")\r\n    .matches(RegExp('[!@#$%^&*(),.?\":{}|<>+=-]'), \"Special symbols is required\")\r\n    .matches(/^(?=.*[a-z])/, \" Must Contain One Lowercase Character\")\r\n    .matches(/^(?=.*[A-Z])/, \"  Must Contain One Uppercase Character\")\r\n    .min(8, \"Confirm Password must be at least 8 characters\")\r\n    .max(16, \"The password must be no more than 16 characters.\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n  username: yup.string().required(\"Name is required\"),\r\n});\r\n\r\nconst RegistrationForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [isModal, setIsModal] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    password_confirm: \"\",\r\n    username: \"\",\r\n    \"user_type\": \"advertiser\"\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [validForm, setValidForm] = useState(false);\r\n\r\n  useEffect(() => {}, [errors]);\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n    setErrors({\r\n      ...errors,\r\n      [name]: \"\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      formData.password_confirm === formData.password &&\r\n      errors?.email?.length === 0 &&\r\n      errors?.password?.length === 0 &&\r\n      errors?.password_confirm?.length === 0 &&\r\n      errors?.username?.length === 0\r\n    ) {\r\n      setValidForm(true);\r\n      return;\r\n    } else {\r\n      setValidForm(false);\r\n    }\r\n  }, [\r\n    errors?.password_confirm?.length,\r\n    errors?.email?.length,\r\n    errors?.username?.length,\r\n    errors?.password?.length,\r\n    formData.password_confirm,\r\n    formData.password,\r\n  ]);\r\n\r\n  const handleTogglePassword = (field) => {\r\n    if (field === \"password\") {\r\n      setShowPassword(!showPassword);\r\n    } else if (field === \"password_confirm\") {\r\n      setShowConfirmPassword(!showConfirmPassword);\r\n    }\r\n  };\r\n\r\n  const handleBlur = async (field) => {\r\n    try {\r\n      await schema.validateAt(field, formData);\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: \"\",\r\n      }));\r\n    } catch (validationError) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: validationError.message,\r\n      }));\r\n      setValidForm(false);\r\n    }\r\n  };\r\n\r\n  const getBorderColor = (field) => {\r\n    return errors[field] && \"#da2e2e\";\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    schema\r\n      .validate(formData, { abortEarly: false })\r\n      .then(async () => {\r\n        console.log(\"Form submitted with data:\", formData);\r\n\r\n        try {\r\n          await dispatch(registerThunk(formData)).unwrap();\r\n          setIsModal(true);\r\n          // Toastify(\"Registration sucsessfull\");\r\n          // navigate(\"/main/accountAdverticer/adverticerEdit\");\r\n          // navigate(\"/main/authorization\");\r\n          setFormData({\r\n            email: \"\",\r\n            password: \"\",\r\n            password_confirm: \"\",\r\n            username: \"\",\r\n          });\r\n          setErrors({});\r\n          setValidForm(false);\r\n        } catch (error) {\r\n          ToastError(error);\r\n        }\r\n      })\r\n      .catch((validationErrors) => {\r\n        const errorsMap = {};\r\n        validationErrors.inner.forEach((error) => {\r\n          errorsMap[error.path] = error.message;\r\n        });\r\n        setErrors(errorsMap);\r\n      });\r\n  };\r\n\r\n  const handleToggleModal = () => {\r\n    setIsModal((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={css.inputContainer}>\r\n          {errors.email && <div className={css.errorText}>{errors.email}</div>}\r\n          <input\r\n            className={`${css.inputForm}  ${\r\n              errors?.email?.length === 0 ? css.active : \"\"\r\n            }\r\n            ${errors?.email?.length > 0 ? css.errorPlaceholder : \"\"}\r\n             dark:bg-black dark:border-white dark:text-white`}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            onBlur={() => handleBlur(\"email\")}\r\n            style={{\r\n              borderColor: getBorderColor(\"email\"),\r\n              color: getBorderColor(\"email\"),\r\n            }}\r\n          />\r\n\r\n          {errors?.email?.length > 1 ? (\r\n            <img src={error} alt=\"\" className={css.img_error} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className={css.inputContainer}>\r\n          {errors.password && (\r\n            <div className={css.errorText}>{errors.password}</div>\r\n          )}\r\n          <div className={css.passwordInputContainer}>\r\n            <input\r\n              className={`${css.inputForm} ${css.passwordInput}  ${\r\n                errors?.password?.length === 0 ? css.active : \"\"\r\n              }\r\n              ${errors?.password?.length > 0 ? css.errorPlaceholder : \"\"}\r\n               dark:bg-black dark:border-white dark:text-white`}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n              onBlur={() => handleBlur(\"password\")}\r\n              style={{\r\n                borderColor: getBorderColor(\"password\"),\r\n                color: getBorderColor(\"password\"),\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className={`${css.eyeIcon} ${\r\n                errors?.password?.length > 1 ? css.error : \"\"\r\n              }`}\r\n              onClick={() => handleTogglePassword(\"password\")}\r\n            >\r\n              {!showPassword ? <FaEyeSlash /> : <FaEye />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={css.inputContainer}>\r\n          {errors.password_confirm && (\r\n            <div className={css.errorText}>{errors.password_confirm}</div>\r\n          )}\r\n          <div className={css.passwordInputContainer}>\r\n            <input\r\n              className={`${css.inputForm} ${css.passwordInput}  ${\r\n                errors?.password_confirm?.length === 0 ? css.active : \"\"\r\n              }\r\n              ${errors?.password_confirm?.length > 0 ? css.errorPlaceholder : \"\"}\r\n              dark:bg-black dark:border-white dark:text-white`}\r\n              type={showConfirmPassword ? \"text\" : \"password\"}\r\n              name=\"password_confirm\"\r\n              placeholder=\"Confirm Password\"\r\n              value={formData.password_confirm}\r\n              onChange={handleInputChange}\r\n              onBlur={() => handleBlur(\"password_confirm\")}\r\n              style={{\r\n                borderColor: getBorderColor(\"password_confirm\"),\r\n                color: getBorderColor(\"password_confirm\"),\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className={`${css.eyeIcon} ${\r\n                errors?.password_confirm?.length > 1 ? css.error : \"\"\r\n              }`}\r\n              onClick={() => handleTogglePassword(\"password_confirm\")}\r\n            >\r\n              {!showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={css.inputContainer}>\r\n          {errors.username && (\r\n            <div className={css.errorText}>{errors.username}</div>\r\n          )}\r\n          <input\r\n            className={`${css.inputForm}  ${\r\n              errors?.username?.length === 0 ? css.active : \"\"\r\n            }\r\n              ${\r\n                errors?.username?.length > 0 ? css.errorPlaceholder : \"\"\r\n              }           \r\n              dark:bg-black dark:border-white dark:text-white`}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Name\"\r\n            value={formData.username}\r\n            onChange={handleInputChange}\r\n            onBlur={() => handleBlur(\"username\")}\r\n            style={{\r\n              borderColor: getBorderColor(\"username\"),\r\n              color: getBorderColor(\"username\"),\r\n            }}\r\n          />\r\n\r\n          {errors?.username?.length > 1 ? (\r\n            <img src={error} alt=\"\" className={css.img_error} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <p className={css.textInfo}>\r\n          *By clicking the Register button, I agree to the\r\n          <NavLink to=\"/main/setting/policyAndPrivecy\">\r\n            <span className={css.spanPolicy}>Privacy Policy</span>\r\n          </NavLink>\r\n          and give my consent to data processing\r\n        </p>\r\n        <div className={`${css.btn_text} ${validForm ? css.btn_valid : \"\"}`}>\r\n          <Button\r\n            label=\"Register\"\r\n            type=\"submit\"\r\n            disabled={validForm ? false : true}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n      {isModal && (\r\n        <Modal childrenEl=\"true\" handleToggleModal={handleToggleModal}>\r\n          <p>\r\n            Registration is complete!\r\n            <br /> Check your e-mail\r\n          </p>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import RegistrationForm from \"../../components/RegistrationForm\";\r\nimport GoogleAndFacebookButton from \"../../components/GoogleButton/GoogleAndFacebookButton\";\r\n\r\nconst RegistrationPage = () => {\r\n  return (\r\n    <div className=\"\">\r\n      <RegistrationForm />\r\n      <GoogleAndFacebookButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nlet isToastActive = false;\r\n\r\nexport const Toastify = (message) => {\r\n  if (isToastActive) return;\r\n\r\n  isToastActive = true;\r\n\r\n  toast(`${message}`, {\r\n    onClose: () => {\r\n      isToastActive = false;\r\n    },\r\n    position: \"top-right\",\r\n    autoClose: 2500,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["_ref","label","onClick","disabled","_jsx","className","css","children","GoogleAndFacebookButton","useNavigate","useDispatch","redirect","setRedirect","useState","_jsxs","ToastContainer","handleGoogleLogin","window","location","href","FcGoogle","Modal","confirm","cancel","title","description","info","handleToggleModal","btn_text_confirm","btn_text_cancel","childrenEl","e","target","currentTarget","_Fragment","type","schema","yup","shape","email","matches","required","password","RegExp","min","max","password_confirm","oneOf","username","RegistrationForm","_errors$password_conf2","_errors$email2","_errors$username2","_errors$password2","_errors$email3","_errors$email4","_errors$email5","_errors$password3","_errors$password4","_errors$password5","_errors$password_conf3","_errors$password_conf4","_errors$password_conf5","_errors$username3","_errors$username4","_errors$username5","dispatch","isModal","setIsModal","formData","setFormData","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","errors","setErrors","validForm","setValidForm","useEffect","handleInputChange","name","value","_errors$email","_errors$password","_errors$password_conf","_errors$username","length","handleTogglePassword","field","handleBlur","async","validateAt","prevErrors","validationError","message","getBorderColor","onSubmit","preventDefault","validate","abortEarly","then","console","log","registerThunk","unwrap","error","ToastError","catch","validationErrors","errorsMap","inner","forEach","path","inputContainer","errorText","inputForm","active","errorPlaceholder","placeholder","onChange","onBlur","style","borderColor","color","src","alt","img_error","passwordInputContainer","passwordInput","eyeIcon","FaEye","FaEyeSlash","textInfo","NavLink","to","spanPolicy","btn_text","btn_valid","Button","prev","RegistrationPage","isToastActive","Toastify","toast","onClose","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}