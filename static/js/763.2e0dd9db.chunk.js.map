{"version":3,"file":"static/js/763.2e0dd9db.chunk.js","mappings":"oHAwBA,MACA,EAAe,IAA0B,2D,sCCzBrCA,EAAOC,EAAQC,E,UACnB,SAASC,IAAa,OAAOA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAIF,UAAUD,GAAI,IAAK,IAAII,KAAKD,GAAG,CAAG,GAAEE,eAAeC,KAAKH,EAAGC,KAAOL,EAAEK,GAAKD,EAAEC,GAAK,CAAE,OAAOL,CAAG,EAAGJ,EAASY,MAAM,KAAMN,UAAY,CAEnR,SAASO,EAASC,EAAMC,GACtB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAOd,EAAS,CACtDmB,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKT,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DS,GAAIR,GACHD,GAAS,KAAMnB,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3E6B,EAAG,iMACHC,OAAQ,UACRC,YAAa,IACbC,cAAe,WACZ/B,IAAWA,EAAsB,gBAAoB,OAAQ,CAChE4B,EAAG,kMACHC,OAAQ,UACRC,YAAa,IACbC,cAAe,WACZ9B,IAAWA,EAAsB,gBAAoB,OAAQ,CAChE2B,EAAG,kCACHC,OAAQ,UACRC,YAAa,IACbC,cAAe,WAEnB,CACA,MAAMC,EAA0B,aAAiBjB,GAClC,G,kCCpCf,SAAgB,IAAM,sB,mECSf,MAAMkB,EAAUjB,IAAsB,IAADkB,EAAA,IAApB,IAAEC,EAAG,OAAEC,GAAQpB,EACrC,OACEqB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGH,IACS,QADHF,EACL,CAACE,UAAO,IAAAF,OAAA,EAARA,EAAUM,KAAMC,IACdJ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEG,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CACLC,cAAe,EACfC,aAAc,GACdC,MAAM,EACNC,SAAU,CACVC,MAAO,IACPC,sBAAsB,GAEtBC,WAAY,CAAEC,GAAI,qBAAsBC,WAAW,GACnDC,WAAY,CACVC,OAAQ,sBACRC,OAAQ,sBACRH,WAAW,GAEbI,QAAS,CAACC,EAAAA,GAAiBC,EAAAA,GAAYC,EAAAA,GAAYC,EAAAA,IACnDC,UAAWC,EAAIC,iBAAiBxB,SAAA,CAE/BE,EAAQ,KACPJ,EAAAA,EAAAA,KAAC2B,EAAAA,GAAW,CAEVC,MAAO,CACL5C,MAAO,OAETwC,UAAWC,EAAII,aAAa3B,UAE5BF,EAAAA,EAAAA,KAAA,OAAK8B,IAAK1B,EAAQ,GAAI2B,IAAI,GAAGP,UAAWC,EAAIO,OANvC5B,EAAQ,IAUhBA,EAAQ,KACPJ,EAAAA,EAAAA,KAAC2B,EAAAA,GAAW,CAEVC,MAAO,CACL5C,MAAO,OAETwC,UAAWC,EAAII,aAAa3B,UAE5BF,EAAAA,EAAAA,KAAA,OAAK8B,IAAK1B,EAAQ,GAAI2B,IAAI,GAAGP,UAAWC,EAAIO,OANvC5B,EAAQ,IAUhBA,EAAQ,KACPJ,EAAAA,EAAAA,KAAC2B,EAAAA,GAAW,CAEVC,MAAO,CACL5C,MAAO,OAETwC,UAAWC,EAAII,aAAa3B,UAE5BF,EAAAA,EAAAA,KAAA,OAAK8B,IAAK1B,EAAQ,GAAI2B,IAAI,GAAGP,UAAWC,EAAIO,OANvC5B,EAAQ,KAUjBC,EAAAA,EAAAA,MAAA,OAAKmB,UAAU,mBAAkBtB,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OACEwB,UAAU,kCACVI,MAAO,CAAEK,MAAO,kBAElBjC,EAAAA,EAAAA,KAAA,OACEwB,UAAU,kCACVI,MAAO,CAAEK,MAAO,kBAGlBjC,EAAAA,EAAAA,KAAA,OACEwB,UAAU,oBACVI,MAAO,CACLM,SAAU,WACVC,OAAQ,qBA8ExB,C,kCChKJ,QAAoC,mDAApC,EAAqG,6C,uBCG9F,MAAMC,EAA0BzD,IAAmB,IAAlB,SAAEuB,GAAUvB,EAClD,OACE0B,EAAAA,EAAAA,MAAA,OAAKmB,UAAWC,EAAsBvB,SAAA,EACpCF,EAAAA,EAAAA,KAAA,OAAK8B,IAAKO,EAAAA,EAASN,IAAI,aACvB/B,EAAAA,EAAAA,KAAA,KAAGwB,UAAW,GAAGC,qBAAmCvB,SAAEA,MAClD,C,gDCRV,QAA+B,sCAA/B,EAAyH,wCAAzH,EAAwK,8BAAxK,EAAyN,0CAAzN,EAA2Q,+BAA3Q,EAA4T,yCAA5T,EAA6W,+BAA7W,EAAyZ,oCAAzZ,EAAgf,6B,iCCKze,MAAMoC,EAAkB3D,IAKxB,IALyB,MAC9BE,EAAK,YACL0D,EAAW,MACXC,EAAK,gBACLC,GACD9D,EACC,MAAM+D,GAAUC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,QAAQG,OAErD,OACExC,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKwB,UAAWC,EAAmBvB,UACjCG,EAAAA,EAAAA,MAACyC,EAAAA,GAAO,CAACC,GAAI,IAAW,OAAPL,QAAO,IAAPA,OAAO,EAAPA,EAASpD,KAAMkC,UAAWC,EAAiBvB,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,OAAK8B,IAAKW,EAAiBV,IAAI,QAAQP,UAAWC,KAElDzB,EAAAA,EAAAA,KAAA,KAAGwB,UAAW,GAAGC,oBAAuCvB,SAAErB,UAI9DmB,EAAAA,EAAAA,KAAA,KAAGwB,UAAW,GAAGC,oBAA4BvB,SAAErB,KAE/CmB,EAAAA,EAAAA,KAAA,KAAGwB,UAAW,GAAGC,oBAAsCvB,SAAEqC,KAEnD,OAALC,QAAK,IAALA,OAAK,EAALA,EAAOpE,QAAS,IACf4B,EAAAA,EAAAA,KAAA,KAAGwB,UAAW,GAAGC,oBAA4BvB,SAAC,YAEhDF,EAAAA,EAAAA,KAAA,MAAAE,SACQ,OAALsC,QAAK,IAALA,OAAK,EAALA,EAAOrC,KAAIN,IAAA,IAAC,GAAEP,EAAE,KAAE0D,EAAI,OAAEC,GAAQpD,EAAA,OACZ,KAAb,OAANoD,QAAM,IAANA,OAAM,EAANA,EAAQ7E,SACNiC,EAAAA,EAAAA,MAAA,MAAamB,UAAW,GAAGC,IAAiBvB,SAAA,EAE1CF,EAAAA,EAAAA,KAACkD,EAAAA,EAAU,KACXlD,EAAAA,EAAAA,KAAA,KACEgD,KAAMA,EACNG,OAAO,QACP3B,UAAW,GAAGC,oBAA0BvB,SAEvC+C,MARI3D,GAYT,EACD,QAGJ,C,uECjDP,SAAgB,kBAAoB,mDAAmD,cAAgB,+CAA+C,YAAc,6CAA6C,IAAM,qCAAqC,MAAQ,uCAAuC,cAAgB,+CAA+C,mBAAqB,oDAAoD,SAAW,0CAA0C,IAAM,qCAAqC,WAAa,4CAA4C,aAAe,+C,+HCgB3lB,MAmMA,EAnMgCX,IAAqB,IAADyE,EAAAC,EAAAxD,EAAA,IAAnB,WAAEyD,GAAY3E,EAC7C,MAAM4E,GAAWC,EAAAA,EAAAA,OACX,MAAEZ,IAAUa,EAAAA,EAAAA,OACXC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAASC,IAAaF,EAAAA,EAAAA,WAAS,IAC7BhB,GAASA,EAAMmB,MAAQnB,EAAMC,MAAQ,CAAC,KAGxCmB,EAAuBC,IAA4BL,EAAAA,EAAAA,WAAS,IAEnEM,EAAAA,EAAAA,YAAU,KAAO,IAADC,EAAAC,EAEO,MAAZ,OAAPP,QAAO,IAAPA,OAAO,EAAPA,EAAShF,QACmB,MAArB,OAAPgF,QAAO,IAAPA,GAAiB,QAAVM,EAAPN,EAASQ,gBAAQ,IAAAF,OAAV,EAAPA,EAAmBG,OACY,MAAxB,OAAPT,QAAO,IAAPA,GAAoB,QAAbO,EAAPP,EAASU,mBAAW,IAAAH,OAAb,EAAPA,EAAsBE,MAEtBX,GAAa,GAEbA,GAAa,EACf,GACC,CAAQ,OAAPE,QAAO,IAAPA,GAAiB,QAAVT,EAAPS,EAASQ,gBAAQ,IAAAjB,OAAV,EAAPA,EAAmBkB,KAAa,OAAPT,QAAO,IAAPA,GAAoB,QAAbR,EAAPQ,EAASU,mBAAW,IAAAlB,OAAb,EAAPA,EAAsBiB,KAAa,OAAPT,QAAO,IAAPA,OAAO,EAAPA,EAAShF,QAsClE,OACEwB,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACwE,EAAAA,GAAc,IACdR,IACC3D,EAAAA,EAAAA,MAAC+B,EAAAA,EAAuB,CAAAlC,SAAA,CAAC,uCACYF,EAAAA,EAAAA,KAAA,SAAM,qCAI3CgE,IACA3D,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKwB,UAAWC,EAAIgD,kBAAkBvE,UACpCG,EAAAA,EAAAA,MAAA,OAAKmB,UAAWC,EAAIiD,YAAYxE,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,KAAGwB,UAAWC,EAAI5C,MAAMqB,SAAC,0BAExB2D,IACgB,QADThE,EACN,CAAQ,OAAPgE,QAAO,IAAPA,OAAO,EAAPA,EAAShB,aAAK,IAAAhD,OAAA,EAAfA,EAAiBM,KAAIwE,IAAA,IAAAC,EAAA,IAAC,QAAExE,GAASuE,EAAA,OAC/BtE,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEG,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CACLC,cAAe,EACfC,aAAc,GACdC,MAAM,EACNI,WAAY,CAAEC,GAAI,qBAAsBC,WAAW,GACnDC,WAAY,CACVC,OAAQ,sBACRC,OAAQ,sBACRH,WAAW,GAEbI,QAAS,CAACC,EAAAA,GAAiBC,EAAAA,GAAYC,EAAAA,IACvCE,UAAWC,EAAIC,iBAAiBxB,SAAA,CAE/BE,EAAQ,KACPC,EAAAA,EAAAA,MAACsB,EAAAA,GAAW,CACVC,MAAO,CACL5C,MAAO,OAETwC,UAAWC,EAAII,aAAa3B,SAAA,CAE3B2E,QAAQC,IAAI1E,IACbJ,EAAAA,EAAAA,KAAA,OAAK8B,IAAK1B,EAAQ,GAAI2B,IAAI,GAAGP,UAAWC,EAAIO,SAI/C5B,EAAQ,KACPC,EAAAA,EAAAA,MAACsB,EAAAA,GAAW,CACVC,MAAO,CACL5C,MAAO,OAETwC,UAAWC,EAAII,aAAa3B,SAAA,CAE3B2E,QAAQC,IAAI1E,IACbJ,EAAAA,EAAAA,KAAA,OAAK8B,IAAK1B,EAAQ,GAAI2B,IAAI,GAAGP,UAAWC,EAAIO,SAI/C5B,EAAQ,KACPC,EAAAA,EAAAA,MAACsB,EAAAA,GAAW,CACVC,MAAO,CACL5C,MAAO,OAETwC,UAAWC,EAAII,aAAa3B,SAAA,CAE3B2E,QAAQC,IAAI1E,IACbJ,EAAAA,EAAAA,KAAA,OAAK8B,IAAK1B,EAAQ,GAAI2B,IAAI,GAAGP,UAAWC,EAAIO,UAIhD3B,EAAAA,EAAAA,MAAA,OAAKmB,UAAU,mBAAkBtB,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OACEwB,UAAU,kCACVI,MAAO,CAAEK,MAAO,kBAElBjC,EAAAA,EAAAA,KAAA,OACEwB,UAAU,kCACVI,MAAO,CAAEK,MAAO,kBAGlBjC,EAAAA,EAAAA,KAAA,OACEwB,UAAU,oBACVI,MAAO,CACLM,SAAU,WACVC,OAAQ,eAKD,QADNyC,EACR,CAACf,EAAQhB,aAAK,IAAA+B,OAAA,EAAdA,EAAgBzE,KAAI4E,IAAA,IAAAC,EAAAC,EAAA,IAAC,MAAEpG,EAAK,YAAE0D,EAAW,MAAEC,GAAOuC,EAAA,OACjD/E,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACsC,EAAAA,EAAe,CACdzD,MAAOA,EACP0D,YAAaA,EACbC,MAAOA,EACPC,iBACO,OAALG,QAAK,IAALA,OAAK,EAALA,EAAOF,WACA,OAAPmB,QAAO,IAAPA,GAAmB,QAAZmB,EAAPnB,EAASqB,kBAAU,IAAAF,GAAiB,QAAjBC,EAAnBD,EAAqBvC,uBAAe,IAAAwC,OAA7B,EAAPA,EAAsCE,QACpC,gBACA,QAIL,MAEJ,WAKX9E,EAAAA,EAAAA,MAAA,OAAKmB,UAAWC,EAAI2D,cAAclF,SAAA,EAChCF,EAAAA,EAAAA,KAAA,UACEqF,KAAK,SACL7D,UAAW,GAAGC,EAAI6D,qBAClBC,QAnHOC,KACjBjC,EAAS,GAAGX,EAAM6C,OAAQ,CAAE7C,OAAc,OAAPiB,QAAO,IAAPA,OAAO,EAAPA,EAAShB,OAAQ,IAAK,EAkH3B3C,UAEpBF,EAAAA,EAAAA,KAAA,QACEwB,UAAW,GAAGC,EAAIiE,6CAA6CxF,SAChE,uBAKHF,EAAAA,EAAAA,KAAA,UACEqF,KAAK,SACL7D,UAAW,GAAGC,EAAIkE,OAChBjC,EAAYjC,EAAImE,WAAanE,EAAIoE,eAEnCC,UAAUpC,EACV6B,QAlKeQ,UACzB,IAAK,IAADC,EACF,GAAW,OAAPnC,QAAO,IAAPA,GAAa,QAANmC,EAAPnC,EAAShB,YAAI,IAAAmD,GAAbA,EAAe1G,GAAI,CAAC,IAAD2G,QACHC,EAAAA,EAAAA,IAAoB,OAAPrC,QAAO,IAAPA,GAAa,QAANoC,EAAPpC,EAAShB,YAAI,IAAAoD,OAAN,EAAPA,EAAe3G,GAAI,IAC7CuE,EAAQhB,KACXwB,SAAU,CAAEC,KAAa,OAAPT,QAAO,IAAPA,OAAO,EAAPA,EAAShB,KAAKwB,SAASC,MACzCC,YAAa,CAAED,KAAa,OAAPT,QAAO,IAAPA,OAAO,EAAPA,EAAShB,KAAK0B,YAAYD,MAC/C6B,OAAQ,YASV,OANAlC,GAAyB,GAEzBmC,YAAW,KACT7C,EAAS,QAAQ,GAChB,UACH8C,aAAaC,WAAW,aAE1B,CAEA,MAAMC,QAAgBC,EAAAA,EAAAA,IAAY,IAAK3C,EAAQhB,KAAMsD,OAAQ,YAC7DtB,QAAQC,IAAI,UAAWyB,GACvBtC,GAAyB,GAEzBmC,YAAW,KACT7C,EAAS,QAAQ,GAChB,KACH8C,aAAaC,WAAW,aAC1B,CAAE,MAAOG,IACPC,EAAAA,EAAAA,GAAWD,EAAME,SAAW,mBAC9B,GAqIsCzG,UAE5BF,EAAAA,EAAAA,KAAA,QAAMwB,UAAWC,EAAImF,gBAAgB1G,SAAC,sBAK7C,C","sources":["assets/icons/checked.svg","assets/icons/links.svg","webpack://nola/./src/components/Banners/Banners.module.css?97db","components/Banners/Banners.jsx","webpack://nola/./src/components/MessagePostOnModeration/MessagePostOnModeration.module.css?b775","components/MessagePostOnModeration/MessagePostOnModeration.jsx","webpack://nola/./src/components/PostsAdverticer/PostsAdverticer.module.css?8299","components/PostsAdverticer/PostsAdverticer.jsx","webpack://nola/./src/pages/PreviewAdvertisemetPage/PreviewAdvertisemetPage.module.css?553d","pages/PreviewAdvertisemetPage/PreviewAdvertisemetPage.jsx"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgChecked(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 80,\n    height: 80,\n    viewBox: \"0 0 80 80\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40 0C17.92 0 0 17.92 0 40C0 62.08 17.92 80 40 80C62.08 80 80 62.08 80 40C80 17.92 62.08 0 40 0ZM40 72C22.36 72 8 57.64 8 40C8 22.36 22.36 8 40 8C57.64 8 72 22.36 72 40C72 57.64 57.64 72 40 72ZM58.36 22.32L32 48.68L21.64 38.36L16 44L32 60L64 28L58.36 22.32Z\",\n    fill: \"#ECCD43\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgChecked);\nexport default __webpack_public_path__ + \"static/media/checked.be3d76171987d08d22f337ee06d1e8e5.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgLinks(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.6736 23.3404C15.6109 24.4031 14.1696 25.0001 12.6667 25.0001C11.1638 25.0001 9.72243 24.4031 8.65973 23.3404C7.59702 22.2776 7 20.8363 7 19.3334C7 17.8305 7.59702 16.3892 8.65973 15.3265\",\n    stroke: \"#07145B\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.3264 10.6596C14.3891 9.59694 15.8304 8.99992 17.3333 8.99992C18.8362 8.99992 20.2776 9.59694 21.3403 10.6596C22.403 11.7224 23 13.1637 23 14.6666C23 16.1695 22.403 17.6108 21.3403 18.6735\",\n    stroke: \"#07145B\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.3337 14.6667L12.667 19.3334\",\n    stroke: \"#07145B\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLinks);\nexport default __webpack_public_path__ + \"static/media/links.8ea15b30859ab270dbacee3638b6576d.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Banners_img__v5X+d\"};","import css from \"./Banners.module.css\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-coverflow\";\r\nimport \"swiper/css/pagination\";\r\nimport \"swiper/css/navigation\";\r\nimport { Autoplay, EffectCoverflow, Navigation, Pagination } from \"swiper/modules\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Banners = ({ key, banner }) => {\r\n  return (\r\n    <>\r\n      {banner &&\r\n        [banner]?.map(( banners ) => (\r\n          <>\r\n            <Swiper\r\n              slidesPerView={1}\r\n              spaceBetween={30}\r\n              loop={true}\r\n              autoplay={{\r\n              delay: 3000, \r\n              disableOnInteraction: false, // Продолжать после ручного переключения\r\n            }}\r\n              pagination={{ el: \".swiper-pagination\", clickable: true }}\r\n              navigation={{\r\n                nextEl: \".swiper-button-next\",\r\n                prevEl: \".swiper-button-prev\",\r\n                clickable: true,\r\n              }}\r\n              modules={[EffectCoverflow, Pagination, Navigation, Autoplay]}\r\n              className={css.swiper_container}\r\n            >\r\n              {banners[0] && (\r\n                <SwiperSlide\r\n                  key={banners[0]}\r\n                  style={{\r\n                    width: \"80%\",\r\n                  }}\r\n                  className={css.swiper_slide}\r\n                >\r\n                  <img src={banners[0]} alt=\"\" className={css.img} />\r\n                </SwiperSlide>\r\n              )}\r\n\r\n              {banners[1] && (\r\n                <SwiperSlide\r\n                  key={banners[1]}\r\n                  style={{\r\n                    width: \"80%\",\r\n                  }}\r\n                  className={css.swiper_slide}\r\n                >\r\n                  <img src={banners[1]} alt=\"\" className={css.img} />\r\n                </SwiperSlide>\r\n              )}\r\n\r\n              {banners[2] && (\r\n                <SwiperSlide\r\n                  key={banners[2]}\r\n                  style={{\r\n                    width: \"80%\",\r\n                  }}\r\n                  className={css.swiper_slide}\r\n                >\r\n                  <img src={banners[2]} alt=\"\" className={css.img} />\r\n                </SwiperSlide>\r\n              )}\r\n\r\n              <div className=\"slider-controler\">\r\n                <div\r\n                  className=\"swiper-button-prev slider-arrow\"\r\n                  style={{ color: \"transparent\" }}\r\n                ></div>\r\n                <div\r\n                  className=\"swiper-button-next slider-arrow\"\r\n                  style={{ color: \"transparent\" }}\r\n                ></div>\r\n\r\n                <div\r\n                  className=\"swiper-pagination\"\r\n                  style={{\r\n                    position: \"relative\",\r\n                    bottom: \"2px\",\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </Swiper>\r\n          </>\r\n        ))}\r\n    </>\r\n\r\n    // <>\r\n    //   <Swiper\r\n    //     slidesPerView={1}\r\n    //     spaceBetween={30}\r\n    //     loop={true}\r\n    //     pagination={{ el: \".swiper-pagination\", clickable: true }}\r\n    //     navigation={{\r\n    //       nextEl: \".swiper-button-next\",\r\n    //       prevEl: \".swiper-button-prev\",\r\n    //       clickable: true,\r\n    //     }}\r\n    //     modules={[EffectCoverflow, Pagination, Navigation]}\r\n    //     className={css.swiper_container}\r\n    //   >\r\n    //     {banners[0] && (\r\n    //       <SwiperSlide\r\n    //         style={{\r\n    //           width: \"80%\",\r\n    //         }}\r\n    //         className={css.swiper_slide}\r\n    //       >\r\n    //         {console.log(banners)}\r\n    //         <img src={banners[0]} alt=\"\" className={css.img} />\r\n    //       </SwiperSlide>\r\n    //     )}\r\n\r\n    //     {banners[1] && (\r\n    //       <SwiperSlide\r\n    //         style={{\r\n    //           width: \"80%\",\r\n    //         }}\r\n    //         className={css.swiper_slide}\r\n    //       >\r\n    //         {console.log(banners)}\r\n    //         <img src={banners[1]} alt=\"\" className={css.img} />\r\n    //       </SwiperSlide>\r\n    //     )}\r\n\r\n    //     {banners[2] && (\r\n    //       <SwiperSlide\r\n    //         style={{\r\n    //           width: \"80%\",\r\n    //         }}\r\n    //         className={css.swiper_slide}\r\n    //       >\r\n    //         {console.log(banners)}\r\n    //         <img src={banners[2]} alt=\"\" className={css.img} />\r\n    //       </SwiperSlide>\r\n    //     )}\r\n    //     {/* // ))} */}\r\n    //     <div className=\"slider-controler\">\r\n    //       <div\r\n    //         className=\"swiper-button-prev slider-arrow\"\r\n    //         style={{ color: \"transparent\" }}\r\n    //       ></div>\r\n    //       <div\r\n    //         className=\"swiper-button-next slider-arrow\"\r\n    //         style={{ color: \"transparent\" }}\r\n    //       ></div>\r\n\r\n    //       <div\r\n    //         className=\"swiper-pagination\"\r\n    //         style={{\r\n    //           position: \"relative\",\r\n    //           bottom: \"2px\",\r\n    //         }}\r\n    //       ></div>\r\n    //     </div>\r\n    //   </Swiper>\r\n    // </>\r\n  );\r\n};\r\n\r\nBanners.propTypes = {\r\n  key: PropTypes.string,\r\n  banner: PropTypes.object,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"checked_container\":\"MessagePostOnModeration_checked_container__+pTd9\",\"description\":\"MessagePostOnModeration_description__GQW4k\"};","import css from \"./MessagePostOnModeration.module.css\";\r\nimport checked from \"../../assets/icons/checked.svg\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const MessagePostOnModeration = ({ children }) => {\r\n  return (\r\n    <div className={css.checked_container}>\r\n      <img src={checked} alt=\"checked\" />\r\n      <p className={`${css.description} dark:text-white `}>{children}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessagePostOnModeration.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"account_link\":\"PostsAdverticer_account_link__KQvK+\",\"img\":\"PostsAdverticer_img__tTNDF\",\"logo_container\":\"PostsAdverticer_logo_container__s9PUe\",\"logo\":\"PostsAdverticer_logo__kCAwM\",\"logo_description\":\"PostsAdverticer_logo_description__++EEw\",\"title\":\"PostsAdverticer_title__JMuPQ\",\"descriptionTest\":\"PostsAdverticer_descriptionTest__+rbOA\",\"links\":\"PostsAdverticer_links__5SwxS\",\"links_item\":\"PostsAdverticer_links_item__3mKMA\",\"link_img\":\"PostsAdverticer_link_img__TE+n5\",\"url\":\"PostsAdverticer_url__GPp6y\"};","import PropTypes from \"prop-types\";\r\nimport { ReactComponent as Icon_Links } from \"../../assets/icons/links.svg\";\r\nimport css from \"./PostsAdverticer.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const PostsAdverticer = ({\r\n  title,\r\n  description,\r\n  links,\r\n  profile_picture,\r\n}) => {\r\n  const profile = useSelector((state) => state.profile.data);\r\n\r\n  return (\r\n    <>\r\n      <div className={css.logo_container}>\r\n        <NavLink to={`/${profile?.id}`} className={css.account_link}>\r\n          <img src={profile_picture} alt=\"photo\" className={css.logo} />\r\n\r\n          <p className={`${css.logo_description} dark:text-white`}>{title}</p>\r\n        </NavLink>\r\n      </div>\r\n\r\n      <p className={`${css.title} dark:text-white`}>{title}</p>\r\n\r\n      <p className={`${css.descriptionTest} dark:text-white`}>{description}</p>\r\n\r\n      {links?.length > 0 && (\r\n        <p className={`${css.links} dark:text-white`}>Links:</p>\r\n      )}\r\n      <ul>\r\n        {links?.map(({ id, href, action }) =>\r\n          action?.length !== 0 ? (\r\n            <li key={id} className={`${css.links_item}`}>\r\n              {/* <img src=\"\" alt=\"\" className={css.link_img} /> */}\r\n              <Icon_Links />\r\n              <a\r\n                href={href}\r\n                target=\"blank\"\r\n                className={`${css.url} dark:text-white`}\r\n              >\r\n                {action}\r\n              </a>\r\n            </li>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nPostsAdverticer.propTypes = {\r\n  links: PropTypes.array,\r\n  description: PropTypes.string,\r\n  title: PropTypes.string,\r\n  data: PropTypes.object,\r\n  profile_picture: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"preview_container\":\"PreviewAdvertisemetPage_preview_container__9+NhL\",\"top_container\":\"PreviewAdvertisemetPage_top_container__AB2Vt\",\"previewMain\":\"PreviewAdvertisemetPage_previewMain__KrSYO\",\"img\":\"PreviewAdvertisemetPage_img__j7DVC\",\"title\":\"PreviewAdvertisemetPage_title__fZg0x\",\"btn_container\":\"PreviewAdvertisemetPage_btn_container__LUbrD\",\"btn_back_container\":\"PreviewAdvertisemetPage_btn_back_container__1SsXm\",\"btn_back\":\"PreviewAdvertisemetPage_btn_back__FY18k\",\"btn\":\"PreviewAdvertisemetPage_btn__QZcqC\",\"btn_active\":\"PreviewAdvertisemetPage_btn_active__uGa0w\",\"btn_disabled\":\"PreviewAdvertisemetPage_btn_disabled__D2qfZ\"};","import PropTypes from \"prop-types\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport css from \"./PreviewAdvertisemetPage.module.css\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-coverflow\";\r\nimport \"swiper/css/pagination\";\r\nimport \"swiper/css/navigation\";\r\nimport { EffectCoverflow, Navigation, Pagination } from \"swiper/modules\";\r\nimport { PostsAdverticer } from \"../../components/PostsAdverticer/PostsAdverticer\";\r\nimport { MessagePostOnModeration } from \"../../components/MessagePostOnModeration/MessagePostOnModeration\";\r\nimport { Banners } from \"../../components/Banners/Banners\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { patchPostApi, postPostApi } from \"../../services/https/https\";\r\n\r\nconst PreviewAdvertisemetPage = ({ setPreview }) => {\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n  const [validForm, setValidForm] = useState(false);\r\n  const [preview, sePreview] = useState(() => {\r\n    return state || state.post || state.data || {};\r\n  });\r\n\r\n  const [postSuccessfullyAdded, setPostSuccessfullyAdded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      preview?.title !== \"\" &&\r\n      preview?.category?.name !== \"\" &&\r\n      preview?.subcategory?.name !== \"\"\r\n    ) {\r\n      setValidForm(true);\r\n    } else {\r\n      setValidForm(false);\r\n    }\r\n  }, [preview?.category?.name, preview?.subcategory?.name, preview?.title]);\r\n\r\n  const handleConfirmClick = async () => {\r\n    try {\r\n      if (preview?.data?.id) {\r\n        const res = await patchPostApi(preview?.data?.id, {\r\n          ...preview.data,\r\n          category: { name: preview?.data.category.name },\r\n          subcategory: { name: preview?.data.subcategory.name },\r\n          status: \"pending\",\r\n        });\r\n\r\n        setPostSuccessfullyAdded(true);\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/main\");\r\n        }, 3000);\r\n        localStorage.removeItem(\"createPost\");\r\n        return;\r\n      }\r\n\r\n      const dataRes = await postPostApi({ ...preview.data, status: \"pending\" });\r\n      console.log(\"dataRes\", dataRes);\r\n      setPostSuccessfullyAdded(true);\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/main\");\r\n      }, 3000);\r\n      localStorage.removeItem(\"createPost\");\r\n    } catch (error) {\r\n      ToastError(error.message || \"Try again later.\");\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(`${state.from}`, { state: preview?.data || [] });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      {postSuccessfullyAdded && (\r\n        <MessagePostOnModeration>\r\n          Advertisement is under moderation. <br />\r\n          It will take about 15 minutes.\r\n        </MessagePostOnModeration>\r\n      )}\r\n      {!postSuccessfullyAdded && (\r\n        <>\r\n          <div className={css.preview_container}>\r\n            <div className={css.previewMain}>\r\n              <p className={css.title}>Advertisement preview</p>\r\n\r\n              {preview &&\r\n                [preview?.data]?.map(({ banners }) => (\r\n                  <>\r\n                    <Swiper\r\n                      slidesPerView={1}\r\n                      spaceBetween={30}\r\n                      loop={true}\r\n                      pagination={{ el: \".swiper-pagination\", clickable: true }}\r\n                      navigation={{\r\n                        nextEl: \".swiper-button-next\",\r\n                        prevEl: \".swiper-button-prev\",\r\n                        clickable: true,\r\n                      }}\r\n                      modules={[EffectCoverflow, Pagination, Navigation]}\r\n                      className={css.swiper_container}\r\n                    >\r\n                      {banners[0] && (\r\n                        <SwiperSlide\r\n                          style={{\r\n                            width: \"80%\",\r\n                          }}\r\n                          className={css.swiper_slide}\r\n                        >\r\n                          {console.log(banners)}\r\n                          <img src={banners[0]} alt=\"\" className={css.img} />\r\n                        </SwiperSlide>\r\n                      )}\r\n\r\n                      {banners[1] && (\r\n                        <SwiperSlide\r\n                          style={{\r\n                            width: \"80%\",\r\n                          }}\r\n                          className={css.swiper_slide}\r\n                        >\r\n                          {console.log(banners)}\r\n                          <img src={banners[1]} alt=\"\" className={css.img} />\r\n                        </SwiperSlide>\r\n                      )}\r\n\r\n                      {banners[2] && (\r\n                        <SwiperSlide\r\n                          style={{\r\n                            width: \"80%\",\r\n                          }}\r\n                          className={css.swiper_slide}\r\n                        >\r\n                          {console.log(banners)}\r\n                          <img src={banners[2]} alt=\"\" className={css.img} />\r\n                        </SwiperSlide>\r\n                      )}\r\n\r\n                      <div className=\"slider-controler\">\r\n                        <div\r\n                          className=\"swiper-button-prev slider-arrow\"\r\n                          style={{ color: \"transparent\" }}\r\n                        ></div>\r\n                        <div\r\n                          className=\"swiper-button-next slider-arrow\"\r\n                          style={{ color: \"transparent\" }}\r\n                        ></div>\r\n\r\n                        <div\r\n                          className=\"swiper-pagination\"\r\n                          style={{\r\n                            position: \"relative\",\r\n                            bottom: \"2px\",\r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                    </Swiper>\r\n                    {[preview.data]?.map(({ title, description, links }) => (\r\n                      <>\r\n                        <PostsAdverticer\r\n                          title={title}\r\n                          description={description}\r\n                          links={links}\r\n                          profile_picture={\r\n                            state?.profile ||\r\n                            preview?.advertiser?.profile_picture?.replace(\r\n                              \"image/upload/\",\r\n                              \"\"\r\n                            )\r\n                          }\r\n                        />\r\n                      </>\r\n                    ))}\r\n                  </>\r\n                ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={css.btn_container}>\r\n            <button\r\n              type=\"button\"\r\n              className={`${css.btn_back_container}`}\r\n              onClick={handleBack}\r\n            >\r\n              <span\r\n                className={`${css.btn_back} dark:text-white dark:border-white`}\r\n              >\r\n                Back to editing\r\n              </span>\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className={`${css.btn} ${\r\n                validForm ? css.btn_active : css.btn_disabled\r\n              }`}\r\n              disabled={validForm ? false : true}\r\n              onClick={handleConfirmClick}\r\n            >\r\n              <span className={css.btn_back_active}>Publish</span>\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviewAdvertisemetPage;\r\n\r\nPreviewAdvertisemetPage.propTypes = {\r\n  post: PropTypes.object,\r\n  setPreview: PropTypes.bool,\r\n};\r\n"],"names":["_path","_path2","_path3","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgLinks","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeWidth","strokeLinecap","ForwardRef","Banners","_ref2","key","banner","_jsx","_Fragment","children","map","banners","_jsxs","Swiper","slidesPerView","spaceBetween","loop","autoplay","delay","disableOnInteraction","pagination","el","clickable","navigation","nextEl","prevEl","modules","EffectCoverflow","Pagination","Navigation","Autoplay","className","css","swiper_container","SwiperSlide","style","swiper_slide","src","alt","img","color","position","bottom","MessagePostOnModeration","checked","PostsAdverticer","description","links","profile_picture","profile","useSelector","state","data","NavLink","to","href","action","Icon_Links","target","_preview$category2","_preview$subcategory2","setPreview","navigate","useNavigate","useLocation","validForm","setValidForm","useState","preview","sePreview","post","postSuccessfullyAdded","setPostSuccessfullyAdded","useEffect","_preview$category","_preview$subcategory","category","name","subcategory","ToastContainer","preview_container","previewMain","_ref3","_ref4","console","log","_ref5","_preview$advertiser","_preview$advertiser$p","advertiser","replace","btn_container","type","btn_back_container","onClick","handleBack","from","btn_back","btn","btn_active","btn_disabled","disabled","async","_preview$data","_preview$data2","patchPostApi","status","setTimeout","localStorage","removeItem","dataRes","postPostApi","error","ToastError","message","btn_back_active"],"sourceRoot":""}