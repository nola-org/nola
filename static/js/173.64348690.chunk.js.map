{"version":3,"file":"static/js/173.64348690.chunk.js","mappings":"yHACA,QAAgC,oCAAhC,EAA0E,0BAA1E,EAAiH,iCAAjH,EAA6J,+BAA7J,EAA8M,sC,sGCgB9M,MAoIA,EApIqBA,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACRC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAuBC,IAA4BF,EAAAA,EAAAA,WAAS,IAC5DG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,KAC1BK,EAAOC,IAAYN,EAAAA,EAAAA,WAAS,IAE/B,CACC,CAAEO,IAAIC,EAAAA,EAAAA,MAAUC,IAAK,GAAIC,KAAM,QAG7BC,EAAMC,IAAWZ,EAAAA,EAAAA,UACN,IAAhBG,EAAKU,QAAgB,CACnBC,YAAa,GACbC,MAAO,GACPC,SAAU,CAAEC,MAAO,KAAMF,MAAO,IAChCG,YAAa,CAAED,MAAO,KAAMF,MAAO,IACnCI,aAAoB,YACpBC,kBAAmB,GACnBC,QAAS,MAIbC,EAAAA,EAAAA,YAAU,KACQ,WACd,IACE,GAAI9B,EAAS+B,MAIX,OAHAnB,EAAQZ,EAAS+B,OACjBX,EAAQpB,EAAS+B,YACjBjB,EAASd,EAAS+B,MAAMlB,OAI1B,MAAM,KAAEF,SAAeqB,EAAAA,EAAAA,IAAa5B,EAAO6B,YAE3CrB,EAAQD,GACRG,EAASH,EAAKE,MAChB,CAAE,MAAOqB,GACPC,QAAQC,IAAIF,EACd,CACD,EAhBe,EAgBZ,GAGH,CAAC9B,EAAQe,EAAMnB,EAAS+B,QA0C3B,OACEM,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,gBAEHC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,KAOb/B,IACA8B,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAAA,QAAMI,SA5CWC,UACvBC,EAAEC,iBACFrC,GAAc,GAEd,UACoBsC,EAAAA,EAAAA,IAAazC,EAAO6B,WAAY,IAC7CtB,EACHmC,OAAQ,YAGVpC,GAAyB,GACzBqC,aAAaC,WAAW,eAExBC,YAAW,KACT/C,EAAS,QAAQ,GAChB,IACL,CAAE,MAAOgC,IACPgB,EAAAA,EAAAA,GAAWhB,EAAMiB,SAAW,mBAC9B,GA0BuCb,SAAA,EAE/BC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CACTjC,KAAMR,EACNS,QAASR,EACTC,MAAOA,EACPC,SAAUA,KAGZuB,EAAAA,EAAAA,MAAA,OAAKgB,UAAWC,EAAmBC,QAhCvBC,KACpBrB,QAAQC,IAAIjB,GACZjB,EAAS,oCAAqC,CAC5C6B,MAAO,CACLpB,OACA8C,KAAMzD,EAAS0D,WAEjB,EAyBgEpB,SAAA,EAExDC,EAAAA,EAAAA,KAAA,UAAQoB,KAAK,SAASN,UAAWC,EAAQhB,UACvCC,EAAAA,EAAAA,KAAA,QAAMc,UAAWC,EAAahB,SAAC,gBAIjCC,EAAAA,EAAAA,KAAA,UAAQoB,KAAK,SAASN,UAAW,GAAGC,KAAWA,IAAiBhB,UAC9DC,EAAAA,EAAAA,KAAA,QAAMc,UAAWC,EAAoBhB,SAAC,sBAM/C7B,IACC4B,EAAAA,EAAAA,MAACuB,EAAAA,EAAuB,CAAAtB,SAAA,CAAC,uCACYC,EAAAA,EAAAA,KAAA,SAAM,sCAIzC,C,uDC9IH,MAAMsB,EAAYV,KACvBW,EAAAA,EAAAA,IAAM,GAAGX,IAAW,CAClBY,SAAU,YACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SACP,C","sources":["webpack://nola/./src/pages/EditPostPage/EditPostPage.module.css?dcc4","pages/EditPostPage/EditPostPage.jsx","services/Toastify/Toastify.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn_container\":\"EditPostPage_btn_container__mlXEg\",\"btn\":\"EditPostPage_btn__iiJWb\",\"btn_active\":\"EditPostPage_btn_active__L9IGU\",\"btn_back\":\"EditPostPage_btn_back__L8v28\",\"btn_back_active\":\"EditPostPage_btn_back_active__PZts-\"};","import css from \"./EditPostPage.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  getPostApi,\r\n  getPostIdApi,\r\n  getPostIdModerationApi,\r\n  patchPostApi,\r\n  postPostApi,\r\n} from \"../../services/https/https\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { CreatePost } from \"../../components/CreatePost/CreatePost\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport { MessagePostOnModeration } from \"../../components/MessagePostOnModeration/MessagePostOnModeration\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst EditPostPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const [formConfig, setFormConfig] = useState(false);\r\n  const [postSuccessfullyAdded, setPostSuccessfullyAdded] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [links, setLinks] = useState(() => {\r\n    return (\r\n      // JSON.parse(localStorage.getItem(\"previewPost\"))?.links ||\r\n      [{ id: nanoid(), url: \"\", name: \"\" }]\r\n    );\r\n  });\r\n  const [post, setPost] = useState(\r\n    data.length !== 0 || {\r\n      description: \"\",\r\n      title: \"\",\r\n      category: { index: null, title: \"\" },\r\n      subcategory: { index: null, title: \"\" },\r\n      callToAction: \"\" || \"Read more\",\r\n      callToActionLinks: \"\",\r\n      banners: [],\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getData = (async () => {\r\n      try {\r\n        if (location.state) {\r\n          setData(location.state);\r\n          setPost(location.state);\r\n          setLinks(location.state.links);\r\n          return;\r\n        }\r\n\r\n        const { data } = await getPostIdApi(params.editPostId);\r\n\r\n        setData(data);\r\n        setLinks(data.links);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n\r\n    // localStorage.setItem(\"previewPost\", JSON.stringify(post));\r\n  }, [params, post, location.state]);\r\n\r\n  const handleChangePost = ({ target }) => {\r\n    const { name, value } = target;\r\n    setPost({\r\n      ...post,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmitPost = async (e) => {\r\n    e.preventDefault();\r\n    setFormConfig(true); // delete later\r\n\r\n    try {\r\n      const res = await patchPostApi(params.editPostId, {\r\n        ...data,\r\n        status: \"pending\",\r\n      });\r\n\r\n      setPostSuccessfullyAdded(true);\r\n      localStorage.removeItem(\"previewPost\");\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/main\");\r\n      }, 3000);\r\n    } catch (error) {\r\n      ToastError(error.message || \"Try again later.\");\r\n    }\r\n  };\r\n\r\n  const handlePreview = () => {\r\n    console.log(post);\r\n    navigate(\"/main/addPost/previewAdvertisemet\", {\r\n      state: {\r\n        data,\r\n        from: location.pathname,\r\n      },\r\n    });\r\n    // navigate(\"/main/addPost/previewAdvertisemet\", { state: data });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      EditPostPage\r\n      <ToastContainer />\r\n      {/* {formConfig && (\r\n        <HandleFormConfig\r\n          message={\"Current post has been edited\"}\r\n          navigatePage={\"/main/accountAdverticer\"}\r\n        />\r\n      )} */}\r\n      {!postSuccessfullyAdded && (\r\n        <div>\r\n          <form onSubmit={handleSubmitPost}>\r\n            {/* post={data} setPost={setData} */}\r\n            <CreatePost\r\n              post={data}\r\n              setPost={setData}\r\n              links={links}\r\n              setLinks={setLinks}\r\n            />\r\n\r\n            <div className={css.btn_container} onClick={handlePreview}>\r\n              {/* <NavLink to=\"/main/addPost/previewAdvertisemet\"> */}\r\n              <button type=\"button\" className={css.btn}>\r\n                <span className={css.btn_back}> Preview</span>\r\n              </button>\r\n              {/* </NavLink> */}\r\n\r\n              <button type=\"submit\" className={`${css.btn} ${css.btn_active}`}>\r\n                <span className={css.btn_back_active}>Publish</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n      {postSuccessfullyAdded && (\r\n        <MessagePostOnModeration>\r\n          Advertisement is under moderation. <br />\r\n          It will take about 15 minutes.\r\n        </MessagePostOnModeration>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPostPage;\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 2500,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["EditPostPage","location","useLocation","navigate","useNavigate","params","useParams","formConfig","setFormConfig","useState","postSuccessfullyAdded","setPostSuccessfullyAdded","data","setData","links","setLinks","id","nanoid","url","name","post","setPost","length","description","title","category","index","subcategory","callToAction","callToActionLinks","banners","useEffect","state","getPostIdApi","editPostId","error","console","log","_jsxs","children","_jsx","ToastContainer","onSubmit","async","e","preventDefault","patchPostApi","status","localStorage","removeItem","setTimeout","ToastError","message","CreatePost","className","css","onClick","handlePreview","from","pathname","type","MessagePostOnModeration","Toastify","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}